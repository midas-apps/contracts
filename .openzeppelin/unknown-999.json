{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xbf25b58cB8DfaD688F7BcB2b87D71C23A6600AaC",
    "txHash": "0x5e69a0c8ae524ea13332e63622db5e591a132a022fb6646945a577c26dd5e152"
  },
  "proxies": [
    {
      "address": "0x0312A9D1Ff2372DDEdCBB21e4B6389aFc919aC4B",
      "txHash": "0x28e0d43cea2d9205c9f2426aa103a67c0ca4b4fa7fe096d1ae54764c7fe16887",
      "kind": "transparent"
    },
    {
      "address": "0xAc3d811f5ff30Aa3ab4b26760d0560faf379536A",
      "txHash": "0x175b03a676aadbd7a231c8c9bb46f881bdd643e883aef99e6edfd1a14a5c23c0",
      "kind": "transparent"
    },
    {
      "address": "0x2812076947e07FF85734afEa2c438BA6dcEb2083",
      "txHash": "0x34f82d1b1132211db01dd14c1418ed15b85bf8e2852f4005a65879407a940c9b",
      "kind": "transparent"
    },
    {
      "address": "0x5e105266db42f78FA814322Bce7f388B4C2e61eb",
      "txHash": "0x99ea9968412a0da6ff7ec8d18a77da4a914981f8125382f61a0829cdac84c1ca",
      "kind": "transparent"
    },
    {
      "address": "0x5FD65C66Fb06060B6BF59C619dC330b1A29F7c59",
      "txHash": "0x1b194834f06377d680a51dbd4e8bc9a33211177cbe7782a4428ab47b510b9c0b",
      "kind": "transparent"
    },
    {
      "address": "0xCC94F68819eEcD7A2252cB3696F13BAa6205e7a8",
      "txHash": "0x9570ac72be7bbeb42949ed01ea3ad647ecb619c31a6494f1015d08c7a5685f60",
      "kind": "transparent"
    },
    {
      "address": "0x594ff09D8438f1fde62712d000250DD361038420",
      "txHash": "0x06fc4be1433164a8c130845177817671b44123e87ccbf1007f04502c0d08926f",
      "kind": "transparent"
    },
    {
      "address": "0xc00C5E42a9b3ac6E6879462ab581366D8A501662",
      "txHash": "0xa90f7400d027d14d6038a6169b7889d0597e281f2a25c41f320879613241f531",
      "kind": "transparent"
    },
    {
      "address": "0xbE8A4f1a312b94A712F8E5367B02ae6E378E6F19",
      "txHash": "0xacc0357a8b77224d5a57adb79f8ef4f31779cdf117e130f13e8f426cf7527086",
      "kind": "transparent"
    },
    {
      "address": "0xC898a5cbDb81F260bd5306D9F9B9A893D0FdF042",
      "txHash": "0x206a9b9da9bf1b8459cfeaa68712adf53857306635fa6cfc8c28c16b915d151a",
      "kind": "transparent"
    },
    {
      "address": "0xCB01C192F223e3c55Ae1E1885A9464131aA985C2",
      "txHash": "0xa8914958c75c0a320cb1c1e7cef5c6640d653fef0cac99c3c5b93b9b4d473ba1",
      "kind": "transparent"
    },
    {
      "address": "0x1CC42c97E7c598A1d1b2E71C84A9C0AD9b3D42E7",
      "txHash": "0x6373af8b1dbd0577b793ecd3ff4ea79738721ddc2c68d752afcc74b6c38cbf52",
      "kind": "transparent"
    },
    {
      "address": "0x47FddEC235Aa35625Fd2bAd34FB373b3A4B6Dd74",
      "txHash": "0x17da82a83f12093fd9ffbd4a511727d1c1355156c7879f514389bf3fc36b1dd8",
      "kind": "transparent"
    },
    {
      "address": "0x6EB6724D8D3D4FF9E24d872E8c38403169dC05f8",
      "txHash": "0xa3f8a072aabc0403897fc5d82a8a6521240a6bb9f5ca9fe92e3a22a098d2acc8",
      "kind": "transparent"
    },
    {
      "address": "0x8285a68a3A181FB974AF5A3437cDf843A7dd1F8B",
      "txHash": "0x478c242a4d95ffe18f5c98d9137d115631e8334206d55a5caf3be720423f4bd7",
      "kind": "transparent"
    },
    {
      "address": "0x5b300312223C63846EbF45B94648B8cc911C7279",
      "txHash": "0xc3c36efdbedf82d4e4b8d52bfde494cfe3fd6f9e0567080afd775f0f9c1becbe",
      "kind": "transparent"
    },
    {
      "address": "0x79a93A5D9190193e1719c1481F4F609cB2FCECcB",
      "txHash": "0xc9ab5e4db020af8416f4d12c57e6661a97be65d35cf25427c2bd734ab977edf3",
      "kind": "transparent"
    },
    {
      "address": "0x9fEB6a02dA022e3685CC3560c49C4b81fA98960A",
      "txHash": "0x9e32a2ca55550b561d0238a8fb4b097b07b384b7c8d94e9fa1390ddcc34cc834",
      "kind": "transparent"
    },
    {
      "address": "0xf3dB9f59f9C90495D1c9556fC5737A679720921d",
      "txHash": "0xecdd1895cdc5d3c54325831ee15d93be832d0ff915e18634543a334c73ff9bf4",
      "kind": "transparent"
    },
    {
      "address": "0xdb981793d483B612AF23e29F0282aD23Fe6C3845",
      "txHash": "0xf76eac621afe63d48267f0742ff6740849efccf6f8eaa842bfb4b7705742c7fc",
      "kind": "transparent"
    },
    {
      "address": "0x48fb106Ef0c0C1a19EdDC9C5d27A945E66DA1C4E",
      "txHash": "0x80bce8da48a34459050a1133ac1b06378733ecfb75791daa15b99e1f3b56c3b2",
      "kind": "transparent"
    },
    {
      "address": "0xD26bB9B45140D17eF14FbD4fCa8Cf0d610ac50E7",
      "txHash": "0xc1be050880334fa1d7281f8cb0cc5da2a7a8e29b3124d382333dbdd082d33f1b",
      "kind": "transparent"
    },
    {
      "address": "0xE90348C06e1adeEC6AB04eF899dC579597c62637",
      "txHash": "0x273ee208f048b6c31cbb3cc64856bc448f21e3262441283afad936dc95c08068",
      "kind": "transparent"
    },
    {
      "address": "0xcC10c5689ADC11bEf3Ea9e11Da0BD9268a4a3Fa7",
      "txHash": "0x4e57a0f181522112614544599b46cbcee2bdd5b8a508a4c8ddf54996a5282cd8",
      "kind": "transparent"
    },
    {
      "address": "0x289584e63A61C69EEE170cD553cff8B3FFD56EA7",
      "txHash": "0xa9647dd945274bfbd695a230a172498c9c7aadc61b32ec81c38b8bc6a2212325",
      "kind": "transparent"
    },
    {
      "address": "0x81e064d0eB539de7c3170EDF38C1A42CBd752A76",
      "txHash": "0xe1cb27bcb9edf3ea6a6fb8ae9bb12a9d3324d509c858ee81b071ca4d41506a59",
      "kind": "transparent"
    },
    {
      "address": "0x2b959a9Deb8e62FaaEA1b226F3bbcbcC0Af31560",
      "txHash": "0x59dee89cbafec07faf52625f0a54d6abf5708ee52e20d23d9ad34735f07b3d01",
      "kind": "transparent"
    },
    {
      "address": "0x7d876E544F12bD3347B9e904F0fb2d83bEd59a27",
      "txHash": "0xbcfdb8b33de77a81fdb7a99d2c4c0d7f8fd46096e49d220fd988aadc8dcbaa05",
      "kind": "transparent"
    },
    {
      "address": "0x2b158D44eEbb03a025F75B79F1d8B3004Ac97737",
      "txHash": "0xc38638b7a94ee63715abf42fb4b012cdc3e5cb714d21bf38c30c42aa3c715df6",
      "kind": "transparent"
    },
    {
      "address": "0x1eff01e0784ae8d06a17AF29A2300D2A9cdA5440",
      "txHash": "0x91031a49ed68347095cd453782acb930d88961d91fa55548f26588d2911ba9a2",
      "kind": "transparent"
    },
    {
      "address": "0xD28b1AB7098E7434a7b4eFdC99c35fb85CfD92C1",
      "txHash": "0x9f921c8034eb2497a18d6f822f0c18530b7c61927ca03df0d80ba9e622dd929a",
      "kind": "transparent"
    },
    {
      "address": "0x5A55899f324bF45DD2dA0b97E145774a4668A9E4",
      "txHash": "0x06daa304b31ca0bccd3e6f8862213e2d8c185f45aa0514ee104d1999c2036fdc",
      "kind": "transparent"
    },
    {
      "address": "0x7F1f3E3D57E5549828909AE3381C7bFF05A4fE09",
      "txHash": "0xf84af24c6e225e2799fd33508036ba58fa0fbdd876d9e7c9b0df02ddea8e3daf",
      "kind": "transparent"
    },
    {
      "address": "0xE1C769D56Cb6448813732F7736041425AA0A4A75",
      "txHash": "0x5a5eaab33fea2df6e58cbb762cf9b46b01c7a5620064728092898466d53d90fa",
      "kind": "transparent"
    },
    {
      "address": "0x441794D6a8F9A3739F5D4E98a728937b33489D29",
      "txHash": "0x73e38de73589ef04a4fd0e4712deacb73c2e120f3f0e53408bf1fd8eaa9b89f7",
      "kind": "transparent"
    },
    {
      "address": "0x1CeaB703956e24b18a0AF6b272E0bF3F499aCa0F",
      "txHash": "0x5d03f5694912b7acd9dfd11542cbc1a4d4a253324a465b5e23b94c94c8a775bd",
      "kind": "transparent"
    },
    {
      "address": "0x70519793f50c95f435972637E1190f41cfc907Bd",
      "txHash": "0xfc16605ca8d1ff1c916d2c95f9cf2dcbed9d8a2fc6d230a75e3fe9908a154db5",
      "kind": "transparent"
    },
    {
      "address": "0xF538675D292d8b372712f44eaf306Cc66cF6d8DC",
      "txHash": "0x2d38d09c2c1e13cf61ce15b38ada8a971e5267b789a27a154d5f5dad417722d9",
      "kind": "transparent"
    },
    {
      "address": "0x558806a80b42cAB4ED75c74bfB178EDc9087AA32",
      "txHash": "0x6c4d49a3ee011e49ee86494eee4baf422204ff85ca6ee33b8aee7c929f90f66e",
      "kind": "transparent"
    },
    {
      "address": "0x057ced81348D57Aad579A672d521d7b4396E8a61",
      "txHash": "0x6b0ec3d42befb6c4f82e3fe571d89c943a8cb1246e5ba34d7de6f1b88dd305a4",
      "kind": "transparent"
    },
    {
      "address": "0xc82CAd78983436BddfcAf0F21316207D87b87462",
      "txHash": "0x8c4bfa80a91a8c10745b3496ad6c20132bb44b632e471a144765ad7f9358650a",
      "kind": "transparent"
    },
    {
      "address": "0xb013A5956f8b838B7E668DFbdf1efA978Ccc7a23",
      "txHash": "0x00781caf8d614d72a4e160e672ef956d7d63f2e3c85a3d1b3979449dd3c94699",
      "kind": "transparent"
    },
    {
      "address": "0xd202CF41a607627cd1A31f650D13599b588eBd1c",
      "txHash": "0x843a5d4f0caef7714cd7346dbdb59e2452f4e269e7132f57ad0813f009d930a3",
      "kind": "transparent"
    },
    {
      "address": "0xBb820D0c85C0B5D1B0dC8C6D3541fbb1AB4C7a60",
      "txHash": "0x490f25fa531200c028a67f8349ff52c5293dc45066a75d0297337a68a1880f11",
      "kind": "transparent"
    },
    {
      "address": "0x0C59a087922f21eb49FFa0fe33E0D17B62Ff4C70",
      "txHash": "0xaae783d6946bb71d29592a8c79b72325c040a0e8c1ceaa9c0dcf9868958229ee",
      "kind": "transparent"
    },
    {
      "address": "0xD66d69c288d9a6FD735d7bE8b2e389970fC4fD42",
      "txHash": "0xcbb2d285898a9d2f06fc76af8da60c1464b2ee77d3fb7e722cc40ed6c8538271",
      "kind": "transparent"
    },
    {
      "address": "0xA9fFe62E785324cb39cB5E2B3Ef713674391d31F",
      "txHash": "0xd44b5791989fdbdd360ec33da6385c06a8981a57c3a54250862ccc9931ff8bac",
      "kind": "transparent"
    },
    {
      "address": "0x765FA39C3759408C383C18bb50F70efDcedB26A6",
      "txHash": "0x3a022e75269b3b5c2808239ee0f4a04d0cea96932c97435b60c8a022ee313477",
      "kind": "transparent"
    },
    {
      "address": "0xc800f672EE8693BC0138E513038C84fe2D1B8a78",
      "txHash": "0xe05f0b4cdea4cb3cebc8676b04fab6251de5d3b4edd8944c85d9b5b99c9ba90c",
      "kind": "transparent"
    },
    {
      "address": "0x462B95575cb2D56de9d1aAaAAb452279B058Aa06",
      "txHash": "0x9610a176803a3c81b8bbdfaee8407510faa84455bb4e4c576415cbbd2c1a462a",
      "kind": "transparent"
    },
    {
      "address": "0x949a7250Bb55Eb79BC6bCC97fCd1C473DB3e6F29",
      "txHash": "0x6e09e91266693b7dd9f816377c2f711c78bb60b29ea3a692f1401d3312d0b9eb",
      "kind": "transparent"
    },
    {
      "address": "0xEB3459316211aB3e2bfee836B989f50fe08AA469",
      "txHash": "0xdaabaae30176d24a5f2f5a366666c965e32d669ecb4154971621ea1441d104cc",
      "kind": "transparent"
    },
    {
      "address": "0x4e250D83C4D5A3C5e78875AE0c2876E2563A11A5",
      "txHash": "0x43773da510a926fedc6436a6a70bd6553d39603ed7565afc94482df25e6fcc0f",
      "kind": "transparent"
    },
    {
      "address": "0xa4a6b89354E278666fb908CcdB16276AE151ff00",
      "txHash": "0x6a69f0a1eb25ccecb282d75671ca9fa6a3dfcaddbada8cef247f5809c30eca4e",
      "kind": "transparent"
    },
    {
      "address": "0xBe61c1A27689c11b63378e84C9bB70A2cd616Fff",
      "txHash": "0x661e487b17be58375c4b94a2df53fe1a8e65e94ee1c0fc62b23767cb1c58356b",
      "kind": "transparent"
    },
    {
      "address": "0x8858A307a85982c2B3CB2AcE1720237f2f09c39B",
      "txHash": "0x7c607602169e5557a576beb7fc95f82c3f87c7239ce6d07c81ceac7dfc6d399a",
      "kind": "transparent"
    },
    {
      "address": "0x707e99655f24747cECEB298B3AAF7FA721EC77fC",
      "txHash": "0x9d176455220ff72bbd12ced1c974eb3955b1817656ff4257fee2ea672799c407",
      "kind": "transparent"
    },
    {
      "address": "0xA7f4553adDce698cB3430A935404c42020caFb02",
      "txHash": "0x8c6d50290cdda20fc77b8ed2ff991d6203a9ec0f6640403ad988cd1f9feb71ef",
      "kind": "transparent"
    },
    {
      "address": "0xaF8FfEDF0e57eE9f6518340b9eb913fFa7dBc66b",
      "txHash": "0xcc8eb9c50b09422cc8faf6a2e8cc3a2981b588053e9717086e3e5594094e78d1",
      "kind": "transparent"
    },
    {
      "address": "0x9c915C94066fF921264071aCB7D59DB6e0cBf0D7",
      "txHash": "0x99169bdb4188c05a3480f087a73c15334af668877a13eb07ebe271bc9e2eac7e",
      "kind": "transparent"
    },
    {
      "address": "0x871550445b0B28dc43e6c9F91399068652EC9B98",
      "txHash": "0x467d57ebd860304ee3fbd5ecf5f7cb2992cd8bb458b50a348eddfb15e6ea0b4a",
      "kind": "transparent"
    },
    {
      "address": "0x8dA4C79fb9B4Ae16eA3e46A6341a1e24b555b21E",
      "txHash": "0x20447d8e3536db379828b17c887133cad56c553daaea93c26fa6778e2c272b11",
      "kind": "transparent"
    },
    {
      "address": "0xd385BA55A22aC732cF435c5b5c3A1dfe5939bA4d",
      "txHash": "0x2d94ffdc0d4c438c64b9b5f5a4ea02ca896bee10c804a2d3602ebc9eab42c2ab",
      "kind": "transparent"
    },
    {
      "address": "0xeBfc1F9B19E2a188Ae0FcFA4b08fC6Cd71b680FF",
      "txHash": "0xf0d70093d8289092e7ab9219aa556c816d5be164118dfeddde107b218e571783",
      "kind": "transparent"
    },
    {
      "address": "0x2dA71aE5f0DD37EC57027DE94c87065c87Aeb7e2",
      "txHash": "0x3d0607c931b84f0d5b3c9c9e395e861e0b45dd8247e4b19bc20770059aac119f",
      "kind": "transparent"
    },
    {
      "address": "0xfAa6625Afd58f69e09EEdd23Ec192Cd98C82C20E",
      "txHash": "0x0cb00c2ccb5ab3134aa495bc5e11a46a643b077e3defeb819f09cc48c2113252",
      "kind": "transparent"
    },
    {
      "address": "0xD197A60de47b3D0187D48DDd1653A009d5e4E5f8",
      "txHash": "0xa4d4af5801319050ed2c2c5938f01074baa321db40ed54267cda1b0004bc31cb",
      "kind": "transparent"
    },
    {
      "address": "0xaF801B65239B4De90F73e26f9Bd1260943A5E248",
      "txHash": "0x30e65471c493e3becb609e6df881612c5f471c94010b02fd260c3f4a1a11d650",
      "kind": "transparent"
    },
    {
      "address": "0x43E27934819eb31D726d8A5c92c535E13239C6A8",
      "txHash": "0xde600d36505a1488bcc8c75fc6e3b777aaee0f1f20b310ba12c81f3a2d911c2c",
      "kind": "transparent"
    },
    {
      "address": "0xB64eB43808De5CCaABF254356F9079C38B802448",
      "txHash": "0xbedb8d8c882209ba6ba787ff2da2b7e1a055a8cb8f08d7638137e3ca697728a6",
      "kind": "transparent"
    },
    {
      "address": "0x89AB3b922e9aec6ae5D2220deBf343d137a098A0",
      "txHash": "0x654873657d36592736c4407575b8dfda131533dce8c185e402a755aeda685ef7",
      "kind": "transparent"
    },
    {
      "address": "0x1cDd9b3163c7549a89F436d1Eb5C3476238f271e",
      "txHash": "0x66820386ee29c51dbfeef0fde328d430938e62423755cf8b9da6a2e7152527ed",
      "kind": "transparent"
    },
    {
      "address": "0x61896940f60A536f1d3Dae9580524542D58d3683",
      "txHash": "0xecc20b1b01a0c14b062f244931cab16b3274d0692e40014ddb87120f676386c7",
      "kind": "transparent"
    },
    {
      "address": "0xd2f570cb45E99F4d2279D05D15D24025d18F76C7",
      "txHash": "0x5a50138084111f5d0fea73771eef9d4d471a814995bffa126bfab7d0b50afaa5",
      "kind": "transparent"
    },
    {
      "address": "0xc4AEc7D3D0894b0A693A1F3601cc96bF4765C432",
      "txHash": "0x42df323d09c0b7c633507b686f92a6f9f17f4c3c6dd1af9e3052dda57b7b5169",
      "kind": "transparent"
    },
    {
      "address": "0x210376434c1591f05399e3F1EF3f98C6e63d370E",
      "txHash": "0xd8e30d63d68c050e00f88d335d46ca1d00cd88bc6c464c151dc0f9951261b092",
      "kind": "transparent"
    },
    {
      "address": "0x1605F7C0FF432Ea4cF2b36a2E35076187A1803b0",
      "txHash": "0x14baeea77e86050074f85a792c70eda1b36e475abdf15396e6550e6a206c65f4",
      "kind": "transparent"
    },
    {
      "address": "0xE66f2727e99c5067463dB46E7e6595A1af1b55f0",
      "txHash": "0x3765e122c1d26f148b748c1021c388e75375c8eef322297f11c597f76739794d",
      "kind": "transparent"
    },
    {
      "address": "0xE3c79bFA56Ed7ACb89028de4345371Ea93fB3434",
      "txHash": "0xcb633a4da399f27a710ea9f9e9f14ceab58b9c25d4c499a502452794adc9cc9a",
      "kind": "transparent"
    },
    {
      "address": "0xd81448A57E88fb704Af0DC43eA2586BC4EF996ef",
      "txHash": "0xbc1a64abac6f4f0ab90bedd07de71106e9ab31ea201e0bdedf5db7c61586bbde",
      "kind": "transparent"
    },
    {
      "address": "0x610CB88e101d9E7e8163ae7788B873d272499df3",
      "txHash": "0x31af3b8a1c3d74b77dd403423be6699c8629a090ec049e55443781b3b223309a",
      "kind": "transparent"
    },
    {
      "address": "0xb39C200d3094C05E048A8F13B69A221DB56D012a",
      "txHash": "0x7b0130ad6e0be601330a2214031d44f96a763f71127ed160399b2a407a6432d1",
      "kind": "transparent"
    },
    {
      "address": "0x62e14d2beD7467eDE5cbBeb150288453f51358c5",
      "txHash": "0xdb1e9ad808d5f0e66bdffe9fa286f70a108ef7297e7378f25dc0aa288aca7bff",
      "kind": "transparent"
    },
    {
      "address": "0xf60C25E470c20B6410F2ba366c5Ac9f844923dc6",
      "txHash": "0xc3d6dd5a59ba8ca9a12145b19745332e925c2410b28194be71a02013441a03ab",
      "kind": "transparent"
    },
    {
      "address": "0x979a534e482Ec6578BEf7a05df3B3B25F11F956d",
      "txHash": "0x4c0a7db293da0523580549056f16e6e613edb76adf52f5e8f6e1e29460d1877f",
      "kind": "transparent"
    },
    {
      "address": "0x448E290f8090Fe6Bed36Cb07340d43440Ec6ebd3",
      "txHash": "0xef639aef769f97875e17f6269501b62093a05f182377c1f56caa5fb565f2ab2f",
      "kind": "transparent"
    },
    {
      "address": "0x27Bfb8d29af693865E3926e752B2f56C7A33A2A8",
      "txHash": "0xffaca86292ff248035041dbd84456c8e03292e62067eda241dc96219105557dd",
      "kind": "transparent"
    },
    {
      "address": "0x7B593fc72637c454749E4118259EaA14a4389553",
      "txHash": "0x1912ba0014d1758a8a1243cfb29dd4cad751b9e36bd78ba3dc225aff8e82410a",
      "kind": "transparent"
    },
    {
      "address": "0x9109A754707987Db09c6FBd5069b3E1Bf0Ff6CF9",
      "txHash": "0xff9c9d1970123cf25003dae0230b7da7051e70f7abeee345351e5a181aff2657",
      "kind": "transparent"
    },
    {
      "address": "0x13Dea856EdA9ae6d29317ef5644297639837E1b2",
      "txHash": "0x8d69821d8529f9593f2d972b01ed4be23857d878f98ea0d0005c1f66ef4cdccc",
      "kind": "transparent"
    },
    {
      "address": "0x814E39FeBD0265D39e37bA469d0B40bd9c77Eef2",
      "txHash": "0x17f314654c9bb2da5e899cc88c5b4d96386fa2c925a8abe0a313bc084963eb80",
      "kind": "transparent"
    },
    {
      "address": "0x2540bdDC5E854419496192688e8257C5dEd7ad78",
      "txHash": "0x89e22d5d119b5aab5098f3aa71c09bbcf515572ad0f53b6428800eecf3c6f4d3",
      "kind": "transparent"
    },
    {
      "address": "0x72a173DcBed0Ac69421fef0E44cf763670E463a5",
      "txHash": "0x41a22f741f96f328137e2a4c003ea5401e42a9cdd225dc06be27bd3d5a124084",
      "kind": "transparent"
    },
    {
      "address": "0x43Daa49a0dF14Fb3d0066C5Ec91aabd872E1b1AD",
      "txHash": "0xfdf85f640f9c1a7e9093794786318fb8eb571ab61c6b66f211cf6c857903b125",
      "kind": "transparent"
    },
    {
      "address": "0x6431A3588e76aF88cc6f12926fFCAc7209197382",
      "txHash": "0x890d37ac9bb02c15e23846dcb699e77bbc9d183922b238c6533745ab230e944b",
      "kind": "transparent"
    },
    {
      "address": "0x94A9e619779e65e7B79fEA6f7eF623118ac1c2F2",
      "txHash": "0xcfc0c2fb758f2735ff15ddd2d41e4599442485e9eb65782a4407627234411a34",
      "kind": "transparent"
    },
    {
      "address": "0x80cAE1bb1B90980148C5bC9c5701b69fAfE7d6B2",
      "txHash": "0x43d389526ae797042dd1513872f94a1935f612b837c942edf84dbeff5e9419f5",
      "kind": "transparent"
    },
    {
      "address": "0x0c459A098EB325fD7ea602Cd7664EE43f1D4Bd08",
      "txHash": "0x9674af00332ea1ee547172fc290552061593766800eb0be55dfb76100c0fb613",
      "kind": "transparent"
    },
    {
      "address": "0xA7A8F3414e02AEcb50E206aF31001CC4990b4D0a",
      "txHash": "0xbafe10bae4d95a47b04bb2075634c9ae6a15b9c6e2557abcc2835ad07c7bc321",
      "kind": "transparent"
    },
    {
      "address": "0xed51fEb552d596F3014B127D21ECcE5a7D8e8b19",
      "txHash": "0x0b9aaf84d726b8fcb5df574662710d68e4b7717880bb9db81d27f472382cb140",
      "kind": "transparent"
    },
    {
      "address": "0x35D44B87D6c786e9434DA337eb59D373e8b84941",
      "txHash": "0xe35d5dc8e906debf0b2c1db4509e2ff65e74415b53d50c94048c5886995de144",
      "kind": "transparent"
    },
    {
      "address": "0x94bf32Bd7DE56E80778530919292BeFf503eC9e6",
      "txHash": "0x8da34ae0306319b4c0664eda8742527e6ebfe67780381d85c13c6d2838a49e48",
      "kind": "transparent"
    },
    {
      "address": "0x8407e1C601eE1FEedFc61a607279E7Be68c515C3",
      "txHash": "0x8f9ddf3b1413f2288b420f372551ba42b782b922b449eb4994d0449ac53c82c5",
      "kind": "transparent"
    },
    {
      "address": "0x3Cdf50753D78a5fB386105f7799110783f81f28E",
      "txHash": "0x9a86d6e3916ca71abb013c0104998a7041e5447b04eaade2305e110f4038a7da",
      "kind": "transparent"
    },
    {
      "address": "0x65D0a14dd083C38244542BAC0e0cd16d51c37458",
      "txHash": "0xae745929fa926f3506c5c55c84c4bce7901c262bdf8d417d270a6dabd3ea1c0a",
      "kind": "transparent"
    },
    {
      "address": "0x36094ABE5E589691B8f60505823A72F5fdEdC953",
      "txHash": "0xeda7ffc821d3bddfbface72d3fbf854308d46d2fa6f82f116508a0c94543168a",
      "kind": "transparent"
    }
  ],
  "impls": {
    "ae32fc7ffebdd4e85444fa3c7867da34172c9cc50c1e7cc8b7f046b6f1049605": {
      "address": "0xEFb2E28b69A29A39067b20aF633d04A2857a4D9d",
      "txHash": "0x4b300022a1474ac3e6a78c94a793cea39a09e4c55892dc295f1adbfe3469d455",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0c4bffb770252bf13c0930000bd10dffdf83ea2c01140fffee3fdb857755a082": {
      "address": "0xFCF9428B38b5147Cb9007bcE426122136080257a",
      "txHash": "0xac21613dda974f369a3535867493d2887742ad1fa48645be7b2f8b4c677a0816",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)10482",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "description",
            "offset": 0,
            "slot": "51",
            "type": "t_string_storage",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:31"
          },
          {
            "label": "latestRound",
            "offset": 0,
            "slot": "52",
            "type": "t_uint80",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:36"
          },
          {
            "label": "maxAnswerDeviation",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:42"
          },
          {
            "label": "minAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:47"
          },
          {
            "label": "maxAnswer",
            "offset": 0,
            "slot": "55",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:52"
          },
          {
            "label": "_roundData",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint80,t_struct(RoundData)11052_storage)",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)50_storage",
            "contract": "HBUsdtCustomAggregatorFeed",
            "src": "contracts/hbUSDT/HBUsdtCustomAggregatorFeed.sol:20"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MidasAccessControl)10482": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int192": {
            "label": "int192",
            "numberOfBytes": "24"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint80,t_struct(RoundData)11052_storage)": {
            "label": "mapping(uint80 => struct CustomAggregatorV3CompatibleFeed.RoundData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoundData)11052_storage": {
            "label": "struct CustomAggregatorV3CompatibleFeed.RoundData",
            "members": [
              {
                "label": "roundId",
                "type": "t_uint80",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "answer",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "updatedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "answeredInRound",
                "type": "t_uint80",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint80": {
            "label": "uint80",
            "numberOfBytes": "10"
          }
        }
      }
    },
    "671ea88910e7b979df8585cfbfa379bb87c0a8bbec04d54d8b128a0dfacb4f76": {
      "address": "0xeC7Fa7Fa55a8aCf33FE899601C24599113E88E7D",
      "txHash": "0xbbfd1688b7a959835e8c0530ef2e4c8385ee59c9f0873c9708cab74723e48e3e",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)10482",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "aggregator",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:22"
          },
          {
            "label": "healthyDiff",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:27"
          },
          {
            "label": "minExpectedAnswer",
            "offset": 0,
            "slot": "53",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:32"
          },
          {
            "label": "maxExpectedAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)50_storage",
            "contract": "HBUsdtDataFeed",
            "src": "contracts/hbUSDT/HBUsdtDataFeed.sol:16"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)10482": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c301ca8edc17866f0703a53bf4065014b6d246c51d8106127266b7353364558c": {
      "address": "0x77B13307D6A36511EE7D887ae7ae9Eb28E78e690",
      "txHash": "0x4f927e2666ff1d41f2ac56567145296ac3b577fe804c08f282801060aec9c678",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:48"
          },
          {
            "label": "accessControl",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(MidasAccessControl)10482",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "mTBILL",
            "src": "contracts/mTBILL/mTBILL.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "mTBILL",
            "src": "contracts/mTBILL/mTBILL.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)50_storage",
            "contract": "hbUSDT",
            "src": "contracts/hbUSDT/hbUSDT.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MidasAccessControl)10482": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "eac396d703572c7faf558b4a54af3cd092bf52f6ab3b3eb4276022100820c693": {
      "address": "0x371d046579d41dd5e0411d1dB7E099D7f4e2BC1f",
      "txHash": "0x46ef76ce928a657dd5a3f775b38137fdc97f32d665a68a748c60e32a1eb54df8",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)10482",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:27"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)5983_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMTbill)12139",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)11958",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)12152_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minFiatRedeemAmount",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:28"
          },
          {
            "label": "fiatAdditionalFee",
            "offset": 0,
            "slot": "420",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:33"
          },
          {
            "label": "fiatFlatFee",
            "offset": 0,
            "slot": "421",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:38"
          },
          {
            "label": "redeemRequests",
            "offset": 0,
            "slot": "422",
            "type": "t_mapping(t_uint256,t_struct(Request)12416_storage)",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:43"
          },
          {
            "label": "requestRedeemer",
            "offset": 0,
            "slot": "423",
            "type": "t_address",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:48"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "424",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:53"
          },
          {
            "label": "___gap",
            "offset": 0,
            "slot": "474",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:33"
          },
          {
            "label": "mTbillRedemptionVault",
            "offset": 0,
            "slot": "524",
            "type": "t_contract(IRedemptionVault)12576",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:40"
          },
          {
            "label": "liquidityProvider",
            "offset": 0,
            "slot": "525",
            "type": "t_address",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "526",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "576",
            "type": "t_array(t_uint256)50_storage",
            "contract": "HBUsdtRedemptionVaultWithSwapper",
            "src": "contracts/hbUSDT/MSlRedemptionVaultWithSwapper.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)11958": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMTbill)12139": {
            "label": "contract IMTbill",
            "numberOfBytes": "20"
          },
          "t_contract(IRedemptionVault)12576": {
            "label": "contract IRedemptionVault",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)10482": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)12156": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)12152_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)12416_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)5983_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)12416_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenOut",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)12156",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "amountMToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mTokenRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)12152_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9e16c685d1a4fa26560ae6ca6a48e50cce9c3b4073a300a9da335f2803630514": {
      "address": "0x06A76e722Ef59fe830db23feeA1C475bfe2eb60d",
      "txHash": "0x02c4e15d8b9a47f97169c8970d13bd5f0da09f5650adeb6cc99f3a25ea22d4e5",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)10482",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:27"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)5983_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMTbill)12139",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)11958",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)12152_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minMTokenAmountForFirstDeposit",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:26"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "420",
            "type": "t_mapping(t_uint256,t_struct(Request)11975_storage)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:31"
          },
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "421",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "422",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "472",
            "type": "t_array(t_uint256)50_storage",
            "contract": "HBUsdtDepositVault",
            "src": "contracts/hbUSDT/HBUsdtDepositVault.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)11958": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMTbill)12139": {
            "label": "contract IMTbill",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)10482": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)12156": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)12152_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)11975_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)5983_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)11975_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIn",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)12156",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "depositedUsdAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "usdAmountWithoutFees",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)12152_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f5b08af613206c57ba0b39c2e7e3761b52ba788690258a9f52f88d3b201552f3": {
      "address": "0x370703BDE8C9c506DB2355e641DB71d4F19F5371",
      "txHash": "0x150b6574de65383b19bb7f4be21ff12f7b21938798475ae73923d8b4af254c2e",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)10482",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "aggregator",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:22"
          },
          {
            "label": "healthyDiff",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:27"
          },
          {
            "label": "minExpectedAnswer",
            "offset": 0,
            "slot": "53",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:32"
          },
          {
            "label": "maxExpectedAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:42"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)10482": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5dbccaede729d12b0d1f89edcda6c403768d13efe8442642a9c10c700be74296": {
      "address": "0x8211c4C0015fFC4edd4799AeB2478552CEAC1523",
      "txHash": "0xeba9add64f8dce95e39840c7147f52d3479602ae4b649a7acfd9d9b3c85aa8c3",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:48"
          },
          {
            "label": "accessControl",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(MidasAccessControl)8207",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "mTBILL",
            "src": "contracts/mTBILL/mTBILL.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "mTBILL",
            "src": "contracts/mTBILL/mTBILL.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)50_storage",
            "contract": "hbXAUt",
            "src": "contracts/hbXAUt/hbXAUt.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MidasAccessControl)8207": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "dd108fc88595e93080c061cc182039c783949bc5854b2eac2fd61df089d3fe07": {
      "address": "0xF58960E3d788f6D32bb00C788C9C6804B58D858D",
      "txHash": "0x60030f15b926c14f705d3976a3da89792676d0aef24e8fcd75017e05fcd73cd0",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8207",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "description",
            "offset": 0,
            "slot": "51",
            "type": "t_string_storage",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:31"
          },
          {
            "label": "latestRound",
            "offset": 0,
            "slot": "52",
            "type": "t_uint80",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:36"
          },
          {
            "label": "maxAnswerDeviation",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:42"
          },
          {
            "label": "minAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:47"
          },
          {
            "label": "maxAnswer",
            "offset": 0,
            "slot": "55",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:52"
          },
          {
            "label": "_roundData",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint80,t_struct(RoundData)8562_storage)",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)50_storage",
            "contract": "HBXautCustomAggregatorFeed",
            "src": "contracts/hbXAUt/HBXautCustomAggregatorFeed.sol:20"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MidasAccessControl)8207": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int192": {
            "label": "int192",
            "numberOfBytes": "24"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint80,t_struct(RoundData)8562_storage)": {
            "label": "mapping(uint80 => struct CustomAggregatorV3CompatibleFeed.RoundData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoundData)8562_storage": {
            "label": "struct CustomAggregatorV3CompatibleFeed.RoundData",
            "members": [
              {
                "label": "roundId",
                "type": "t_uint80",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "answer",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "updatedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "answeredInRound",
                "type": "t_uint80",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint80": {
            "label": "uint80",
            "numberOfBytes": "10"
          }
        }
      }
    },
    "ecf37c4cac45cafe75b168a10a632324fb382bd624632a2d02bf59a4c6bd0f44": {
      "address": "0xCCc8B199F3B9A60fB845412a5E1A2DE57f88Bb8f",
      "txHash": "0x300ebfded8ce09c15799cac4702606533ae477c6578dbf06a4f6854bb4373abc",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8207",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "aggregator",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:22"
          },
          {
            "label": "healthyDiff",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:27"
          },
          {
            "label": "minExpectedAnswer",
            "offset": 0,
            "slot": "53",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:32"
          },
          {
            "label": "maxExpectedAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)50_storage",
            "contract": "HBXautDataFeed",
            "src": "contracts/hbXAUt/HBXautDataFeed.sol:16"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)8207": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8ddb392e7e7fe2474c3e6737fc50a9c6e24ca4c222689c2264527edca295db00": {
      "address": "0x2Be06458b04a6a18Bae3b8E98299BC83892932E0",
      "txHash": "0x77fb65d83efdcf89bcb8de98b58e3bdaac123ce3bb0b8288474141d0ab125535",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8968",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:27"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)4184_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMTbill)11432",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)11251",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)11445_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minMTokenAmountForFirstDeposit",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:26"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "420",
            "type": "t_mapping(t_uint256,t_struct(Request)11268_storage)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:31"
          },
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "421",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "422",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "472",
            "type": "t_array(t_uint256)50_storage",
            "contract": "HBXautDepositVault",
            "src": "contracts/hbXAUt/HBXautDepositVault.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)11251": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMTbill)11432": {
            "label": "contract IMTbill",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)8968": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)11449": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)11445_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)11268_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)4184_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)11268_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIn",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)11449",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "depositedUsdAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "usdAmountWithoutFees",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)11445_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5d5a8c32958679a305a7b35a897cd465d7c61d20f1fbff99ee76ae995671c745": {
      "address": "0x7cE2D1f48Dc1d9932c0543c5F7E8854F79445687",
      "txHash": "0x89e1142a2cf2e7bcbd82261128a65d4190bb581e410afd4e04ddaff036c1ba7a",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8968",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:27"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)4184_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMTbill)11432",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)11251",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)11445_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minFiatRedeemAmount",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:28"
          },
          {
            "label": "fiatAdditionalFee",
            "offset": 0,
            "slot": "420",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:33"
          },
          {
            "label": "fiatFlatFee",
            "offset": 0,
            "slot": "421",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:38"
          },
          {
            "label": "redeemRequests",
            "offset": 0,
            "slot": "422",
            "type": "t_mapping(t_uint256,t_struct(Request)11709_storage)",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:43"
          },
          {
            "label": "requestRedeemer",
            "offset": 0,
            "slot": "423",
            "type": "t_address",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:48"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "424",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:53"
          },
          {
            "label": "___gap",
            "offset": 0,
            "slot": "474",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:33"
          },
          {
            "label": "mTbillRedemptionVault",
            "offset": 0,
            "slot": "524",
            "type": "t_contract(IRedemptionVault)11869",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:40"
          },
          {
            "label": "liquidityProvider",
            "offset": 0,
            "slot": "525",
            "type": "t_address",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "526",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "576",
            "type": "t_array(t_uint256)50_storage",
            "contract": "HBXautRedemptionVaultWithSwapper",
            "src": "contracts/hbXAUt/HBXautRedemptionVaultWithSwapper.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)11251": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMTbill)11432": {
            "label": "contract IMTbill",
            "numberOfBytes": "20"
          },
          "t_contract(IRedemptionVault)11869": {
            "label": "contract IRedemptionVault",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)8968": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)11449": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)11445_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)11709_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)4184_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)11709_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenOut",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)11449",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "amountMToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mTokenRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)11445_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b2320206751a1df107744aee889a5f98737a159b6bc1b5aaab48ca763196f857": {
      "address": "0x16947af5238D03910D134d1E5323247B925A8483",
      "txHash": "0x3b6bd3a55cf75a92a586b67831e69c2205282437012a56ffd8b75d94079c8a34",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8207",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "description",
            "offset": 0,
            "slot": "51",
            "type": "t_string_storage",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:31"
          },
          {
            "label": "latestRound",
            "offset": 0,
            "slot": "52",
            "type": "t_uint80",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:36"
          },
          {
            "label": "maxAnswerDeviation",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:42"
          },
          {
            "label": "minAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:47"
          },
          {
            "label": "maxAnswer",
            "offset": 0,
            "slot": "55",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:52"
          },
          {
            "label": "_roundData",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint80,t_struct(RoundData)8562_storage)",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:57"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MidasAccessControl)8207": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int192": {
            "label": "int192",
            "numberOfBytes": "24"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint80,t_struct(RoundData)8562_storage)": {
            "label": "mapping(uint80 => struct CustomAggregatorV3CompatibleFeed.RoundData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoundData)8562_storage": {
            "label": "struct CustomAggregatorV3CompatibleFeed.RoundData",
            "members": [
              {
                "label": "roundId",
                "type": "t_uint80",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "answer",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "updatedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "answeredInRound",
                "type": "t_uint80",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint80": {
            "label": "uint80",
            "numberOfBytes": "10"
          }
        }
      }
    },
    "251dba59783e99de4da4234441922831c9a499a6e6d79632babe3d2fb53889ae": {
      "address": "0x7B5Bd5A38677A5355A54adc9B3113C3023709d03",
      "txHash": "0x3accb88410e6369bdd8bdc1442f7b73bc9cd5e573c58ecd630e0a423413e8b37",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:48"
          },
          {
            "label": "accessControl",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(MidasAccessControl)8968",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "mTBILL",
            "src": "contracts/mTBILL/mTBILL.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "mTBILL",
            "src": "contracts/mTBILL/mTBILL.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)50_storage",
            "contract": "lstHYPE",
            "src": "contracts/lstHYPE/lstHYPE.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MidasAccessControl)8968": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b1e8fbf7d847a8a2df9594c0162b46ea90d51023803d3fa1c2b0415e1d4bf7a5": {
      "address": "0x767807aE6789b1ea9Fe9D3C57Ef360392566E013",
      "txHash": "0x9b099a61939a642d664a243985b423fec912ecfbb83a243b253e28bca1e3774e",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8968",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "description",
            "offset": 0,
            "slot": "51",
            "type": "t_string_storage",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:31"
          },
          {
            "label": "latestRound",
            "offset": 0,
            "slot": "52",
            "type": "t_uint80",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:36"
          },
          {
            "label": "maxAnswerDeviation",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:42"
          },
          {
            "label": "minAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:47"
          },
          {
            "label": "maxAnswer",
            "offset": 0,
            "slot": "55",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:52"
          },
          {
            "label": "_roundData",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint80,t_struct(RoundData)9459_storage)",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)50_storage",
            "contract": "LstHypeCustomAggregatorFeed",
            "src": "contracts/lstHYPE/LstHypeCustomAggregatorFeed.sol:20"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MidasAccessControl)8968": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int192": {
            "label": "int192",
            "numberOfBytes": "24"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint80,t_struct(RoundData)9459_storage)": {
            "label": "mapping(uint80 => struct CustomAggregatorV3CompatibleFeed.RoundData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoundData)9459_storage": {
            "label": "struct CustomAggregatorV3CompatibleFeed.RoundData",
            "members": [
              {
                "label": "roundId",
                "type": "t_uint80",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "answer",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "updatedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "answeredInRound",
                "type": "t_uint80",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint80": {
            "label": "uint80",
            "numberOfBytes": "10"
          }
        }
      }
    },
    "603451dd68a75f784c6acae2271b6b196bb9945611623a0440f6c01e5293c3d2": {
      "address": "0xFCf86fa427Dd9651a029caDcA79a40F94E0b29Ba",
      "txHash": "0xc71c23cbf0ec8c7ad671d0cdcb6d84562229b08fb5680b50e29068c9042b2035",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8968",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "aggregator",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:22"
          },
          {
            "label": "healthyDiff",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:27"
          },
          {
            "label": "minExpectedAnswer",
            "offset": 0,
            "slot": "53",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:32"
          },
          {
            "label": "maxExpectedAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)50_storage",
            "contract": "LstHypeDataFeed",
            "src": "contracts/lstHYPE/LstHypeDataFeed.sol:16"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)8968": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8e8f71909f991ba6c4665ebdd7e01109975ea90af1ce438c9ac55f94270b59a7": {
      "address": "0x58d5c2068A61B8ad234f7280f0f94533418dBd3b",
      "txHash": "0x5edd9f6e54e1d0b36610ddcea52604db8b3be04b54c64903213a5fdf033a9c52",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8968",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:27"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)4184_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMTbill)10708",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)10527",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)10721_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minMTokenAmountForFirstDeposit",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:26"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "420",
            "type": "t_mapping(t_uint256,t_struct(Request)10544_storage)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:31"
          },
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "421",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "422",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "472",
            "type": "t_array(t_uint256)50_storage",
            "contract": "LstHypeDepositVault",
            "src": "contracts/lstHYPE/LstHypeDepositVault.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)10527": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMTbill)10708": {
            "label": "contract IMTbill",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)8968": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)10725": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)10721_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)10544_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)4184_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)10544_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIn",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)10725",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "depositedUsdAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "usdAmountWithoutFees",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)10721_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "53c36db8ff340d2a2c6766f3882b5294b6d300e5e557747b9bb55a4de2a4703f": {
      "address": "0x75b6F098A6FD7D50e21e903C7f246f04D2bCFc16",
      "txHash": "0x589a6aaaac0459e69c45183b3439b19a094b4494c66f1675387e576835ebbd4f",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8968",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:27"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)4184_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMTbill)10708",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)10527",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)10721_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minFiatRedeemAmount",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:28"
          },
          {
            "label": "fiatAdditionalFee",
            "offset": 0,
            "slot": "420",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:33"
          },
          {
            "label": "fiatFlatFee",
            "offset": 0,
            "slot": "421",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:38"
          },
          {
            "label": "redeemRequests",
            "offset": 0,
            "slot": "422",
            "type": "t_mapping(t_uint256,t_struct(Request)10985_storage)",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:43"
          },
          {
            "label": "requestRedeemer",
            "offset": 0,
            "slot": "423",
            "type": "t_address",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:48"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "424",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:53"
          },
          {
            "label": "___gap",
            "offset": 0,
            "slot": "474",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:33"
          },
          {
            "label": "mTbillRedemptionVault",
            "offset": 0,
            "slot": "524",
            "type": "t_contract(IRedemptionVault)11145",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:40"
          },
          {
            "label": "liquidityProvider",
            "offset": 0,
            "slot": "525",
            "type": "t_address",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "526",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "576",
            "type": "t_array(t_uint256)50_storage",
            "contract": "LstHypeRedemptionVaultWithSwapper",
            "src": "contracts/lstHYPE/LstHypeRedemptionVaultWithSwapper.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)10527": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMTbill)10708": {
            "label": "contract IMTbill",
            "numberOfBytes": "20"
          },
          "t_contract(IRedemptionVault)11145": {
            "label": "contract IRedemptionVault",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)8968": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)10725": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)10721_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)10985_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)4184_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)10985_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenOut",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)10725",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "amountMToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mTokenRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)10721_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "eefa148e350035e5559216ad426ca774a490f9789a94d51bb7286a6c59168cf4": {
      "address": "0x6d684992F8d105B33f9b1bbAa77bDD0E0F71F585",
      "txHash": "0xab7a0cab8da4f8fa2bfd6cd8d15395a78684231deab4f3394abca1b48fa462c2",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:48"
          },
          {
            "label": "accessControl",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(MidasAccessControl)11638",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "mTBILL",
            "src": "contracts/mTBILL/mTBILL.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "mTBILL",
            "src": "contracts/mTBILL/mTBILL.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)50_storage",
            "contract": "liquidHYPE",
            "src": "contracts/liquidHYPE/liquidHYPE.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MidasAccessControl)11638": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1bee2f2ac490401ef75b5c6f96a8c81c7a0367d2ab753315615bd73460decbed": {
      "address": "0x20a9BB2E08b9cB3C38cb3838311f7E0bd129bFF8",
      "txHash": "0xfb5a16980e4c3443753e1cb01e3e2e903023ff3c5a36f6546717d2af98beea59",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)11638",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "description",
            "offset": 0,
            "slot": "51",
            "type": "t_string_storage",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:31"
          },
          {
            "label": "latestRound",
            "offset": 0,
            "slot": "52",
            "type": "t_uint80",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:36"
          },
          {
            "label": "maxAnswerDeviation",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:42"
          },
          {
            "label": "minAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:47"
          },
          {
            "label": "maxAnswer",
            "offset": 0,
            "slot": "55",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:52"
          },
          {
            "label": "_roundData",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint80,t_struct(RoundData)12208_storage)",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)50_storage",
            "contract": "LiquidHypeCustomAggregatorFeed",
            "src": "contracts/liquidHYPE/LiquidHypeCustomAggregatorFeed.sol:20"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MidasAccessControl)11638": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int192": {
            "label": "int192",
            "numberOfBytes": "24"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint80,t_struct(RoundData)12208_storage)": {
            "label": "mapping(uint80 => struct CustomAggregatorV3CompatibleFeed.RoundData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoundData)12208_storage": {
            "label": "struct CustomAggregatorV3CompatibleFeed.RoundData",
            "members": [
              {
                "label": "roundId",
                "type": "t_uint80",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "answer",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "updatedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "answeredInRound",
                "type": "t_uint80",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint80": {
            "label": "uint80",
            "numberOfBytes": "10"
          }
        }
      }
    },
    "79262f211feed313e6bbabced72f7383fc3dd1f8aa5d4748a5e55d494226a0d2": {
      "address": "0x156286eD5ce3Ac31F20EF501ad6a3de915fDB01E",
      "txHash": "0xb4191b24ae8cc258e9e16ce8bee55fdb813648d63680a464c5a8a5c5a98b6692",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)11638",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "aggregator",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:22"
          },
          {
            "label": "healthyDiff",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:27"
          },
          {
            "label": "minExpectedAnswer",
            "offset": 0,
            "slot": "53",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:32"
          },
          {
            "label": "maxExpectedAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)50_storage",
            "contract": "LiquidHypeDataFeed",
            "src": "contracts/liquidHYPE/LiquidHypeDataFeed.sol:16"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)11638": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "88b3e09ef57df9cf6d68b58b0fbaac29efd6fd48481d317819f74b4ebdfd12bb": {
      "address": "0x0dE56F6dD79D85Fd71EfAF12d1a1d39Ee2c0f2F2",
      "txHash": "0xb8eb84d4941eb7ac21210e07743144cab39abdda974d3b670f412a2c120582ee",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)11638",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:27"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)6300_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMTbill)14305",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)14124",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)14318_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minMTokenAmountForFirstDeposit",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:26"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "420",
            "type": "t_mapping(t_uint256,t_struct(Request)14141_storage)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:31"
          },
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "421",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "422",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "472",
            "type": "t_array(t_uint256)50_storage",
            "contract": "LiquidHypeDepositVault",
            "src": "contracts/liquidHYPE/LiquidHypeDepositVault.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)14124": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMTbill)14305": {
            "label": "contract IMTbill",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)11638": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)14322": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)14318_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)14141_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)6300_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)14141_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIn",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)14322",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "depositedUsdAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "usdAmountWithoutFees",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)14318_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8533b4b3ae8ebeb4dc56b4a60b8b276e6e98aaffb50623478e588c33032b687e": {
      "address": "0xA69ca6052A4eBf72Ce3497a7F7c5599382825Cd2",
      "txHash": "0x5709fe0e7bf41d2c21850a0bf99733682fba7827979e97fb42ef83a9a27416e9",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)11638",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:27"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)6300_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMTbill)14305",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)14124",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)14318_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minFiatRedeemAmount",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:28"
          },
          {
            "label": "fiatAdditionalFee",
            "offset": 0,
            "slot": "420",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:33"
          },
          {
            "label": "fiatFlatFee",
            "offset": 0,
            "slot": "421",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:38"
          },
          {
            "label": "redeemRequests",
            "offset": 0,
            "slot": "422",
            "type": "t_mapping(t_uint256,t_struct(Request)14582_storage)",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:43"
          },
          {
            "label": "requestRedeemer",
            "offset": 0,
            "slot": "423",
            "type": "t_address",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:48"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "424",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:53"
          },
          {
            "label": "___gap",
            "offset": 0,
            "slot": "474",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:33"
          },
          {
            "label": "mTbillRedemptionVault",
            "offset": 0,
            "slot": "524",
            "type": "t_contract(IRedemptionVault)14742",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:40"
          },
          {
            "label": "liquidityProvider",
            "offset": 0,
            "slot": "525",
            "type": "t_address",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "526",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "576",
            "type": "t_array(t_uint256)50_storage",
            "contract": "LiquidHypeRedemptionVaultWithSwapper",
            "src": "contracts/liquidHYPE/LiquidHypeRedemptionVaultWithSwapper.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)14124": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMTbill)14305": {
            "label": "contract IMTbill",
            "numberOfBytes": "20"
          },
          "t_contract(IRedemptionVault)14742": {
            "label": "contract IRedemptionVault",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)11638": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)14322": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)14318_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)14582_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)6300_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)14582_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenOut",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)14322",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "amountMToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mTokenRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)14318_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      },
      "allAddresses": [
        "0xA69ca6052A4eBf72Ce3497a7F7c5599382825Cd2",
        "0x6b1331D4e885aE3143ee23726573AcaDAbE2E137"
      ]
    },
    "42be9d5650b213c1c1e6dca670b65402efaff0975f19bca25c8f38eb3696379c": {
      "address": "0x448897fEc88D145E22cA8594F1a928C72e1De8a6",
      "txHash": "0x357754aaddeb60d1f41ba2b0e29d09546973751505e2e28a258ed3a32c5c8998",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)10524",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)4934_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)11627",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)11362",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)11640_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minMTokenAmountForFirstDeposit",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:78"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "420",
            "type": "t_mapping(t_uint256,t_struct(Request)11379_storage)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:83"
          },
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "421",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "422",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:93"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "472",
            "type": "t_array(t_uint256)50_storage",
            "contract": "HBXautDepositVault",
            "src": "contracts/hbXAUt/HBXautDepositVault.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)11362": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)11627": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)10524": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)11644": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)11640_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)11379_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)4934_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)11379_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIn",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)11644",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "depositedUsdAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "usdAmountWithoutFees",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)11640_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d7a63110fdf1a0031d31b863ce333fa316c71611ded00454ca1b3456ff7ce8a7": {
      "address": "0x67581417D7AFe1E02d1Da4AbfD4fa6a2774e625f",
      "txHash": "0xe4836896fdad0826d9485b6d4224e875bc18a6e60f3607d250fae2796acb0313",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)10524",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)4934_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)11627",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)11362",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)11640_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minFiatRedeemAmount",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:69"
          },
          {
            "label": "fiatAdditionalFee",
            "offset": 0,
            "slot": "420",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:74"
          },
          {
            "label": "fiatFlatFee",
            "offset": 0,
            "slot": "421",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:79"
          },
          {
            "label": "redeemRequests",
            "offset": 0,
            "slot": "422",
            "type": "t_mapping(t_uint256,t_struct(Request)11908_storage)",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:84"
          },
          {
            "label": "requestRedeemer",
            "offset": 0,
            "slot": "423",
            "type": "t_address",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:89"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "424",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:94"
          },
          {
            "label": "___gap",
            "offset": 0,
            "slot": "474",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:33"
          },
          {
            "label": "mTbillRedemptionVault",
            "offset": 0,
            "slot": "524",
            "type": "t_contract(IRedemptionVault)12138",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:40"
          },
          {
            "label": "liquidityProvider",
            "offset": 0,
            "slot": "525",
            "type": "t_address",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "526",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "576",
            "type": "t_array(t_uint256)50_storage",
            "contract": "HBXautRedemptionVaultWithSwapper",
            "src": "contracts/hbXAUt/HBXautRedemptionVaultWithSwapper.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)11362": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)11627": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(IRedemptionVault)12138": {
            "label": "contract IRedemptionVault",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)10524": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)11644": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)11640_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)11908_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)4934_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)11908_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenOut",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)11644",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "amountMToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mTokenRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)11640_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "804722508747600fb71097c914fe5a68f71ccb902e8eea8ce99721d8b84b9b48": {
      "address": "0x76a20173c5792C04a9CC6754D7e888AC84C54871",
      "txHash": "0xc12ee679cef77b59b3c434a2b7db183ac87ec942cf7b35c473864e9a72851714",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:48"
          },
          {
            "label": "accessControl",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(MidasAccessControl)8861",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "mToken",
            "src": "contracts/mToken.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "mToken",
            "src": "contracts/mToken.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)50_storage",
            "contract": "hbUSDC",
            "src": "contracts/hbUSDC/hbUSDC.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MidasAccessControl)8861": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "06aa60cf1d2de02c43917c8fa56e5ee3b3adfc8bf971c717b7e23b1f68c2e85e": {
      "address": "0x64425D48183122e5C072178924cbcf5233c45d48",
      "txHash": "0x48241dfc3712a6a437e0b46eacce4df27ee48472f2338f4e14012e93519c3372",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8861",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "description",
            "offset": 0,
            "slot": "51",
            "type": "t_string_storage",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:31"
          },
          {
            "label": "latestRound",
            "offset": 0,
            "slot": "52",
            "type": "t_uint80",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:36"
          },
          {
            "label": "maxAnswerDeviation",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:42"
          },
          {
            "label": "minAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:47"
          },
          {
            "label": "maxAnswer",
            "offset": 0,
            "slot": "55",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:52"
          },
          {
            "label": "_roundData",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint80,t_struct(RoundData)9186_storage)",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)50_storage",
            "contract": "HBUsdcCustomAggregatorFeed",
            "src": "contracts/hbUSDC/HBUsdcCustomAggregatorFeed.sol:20"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MidasAccessControl)8861": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int192": {
            "label": "int192",
            "numberOfBytes": "24"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint80,t_struct(RoundData)9186_storage)": {
            "label": "mapping(uint80 => struct CustomAggregatorV3CompatibleFeed.RoundData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoundData)9186_storage": {
            "label": "struct CustomAggregatorV3CompatibleFeed.RoundData",
            "members": [
              {
                "label": "roundId",
                "type": "t_uint80",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "answer",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "updatedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "answeredInRound",
                "type": "t_uint80",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint80": {
            "label": "uint80",
            "numberOfBytes": "10"
          }
        }
      }
    },
    "664230e89bf5d3e9d7f59867c97d04ca96ab654e546cafa2d31b5f97ea6eae41": {
      "address": "0xF8F519F243aafe49eB0bb9490Ae869D488d4241d",
      "txHash": "0x5102b47739e1513b5efed267ab7ff53b4eca2a8f308d16ccd2b35fbe5be2e559",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8861",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "aggregator",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:22"
          },
          {
            "label": "healthyDiff",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:27"
          },
          {
            "label": "minExpectedAnswer",
            "offset": 0,
            "slot": "53",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:32"
          },
          {
            "label": "maxExpectedAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)50_storage",
            "contract": "HBUsdcDataFeed",
            "src": "contracts/hbUSDC/HBUsdcDataFeed.sol:16"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)8861": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "96a24bdc45711ada224bd39207ba5e5b406fad903b8df311909df076a89e0b4f": {
      "address": "0x73068e63387D4A0Ce5E39012CA957A130b3c82d7",
      "txHash": "0x8abf1a55d00747109c04026552397e65a1943ff8762a5a4f665e94e3e3bc3efa",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8861",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)4184_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)10355",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)10090",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)10368_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minMTokenAmountForFirstDeposit",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:78"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "420",
            "type": "t_mapping(t_uint256,t_struct(Request)10107_storage)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:83"
          },
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "421",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "422",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:93"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "472",
            "type": "t_array(t_uint256)50_storage",
            "contract": "HBUsdcDepositVault",
            "src": "contracts/hbUSDC/HBUsdcDepositVault.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)10090": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)10355": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)8861": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)10372": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)10368_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)10107_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)4184_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)10107_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIn",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)10372",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "depositedUsdAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "usdAmountWithoutFees",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)10368_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "19164cf742090253452d0c7bf77e5f4c3807792da9f3b0a627b68d99a1b0ea5c": {
      "address": "0x3Bf41767Bc03CfD7850F0ba92D104C7ebC75A28c",
      "txHash": "0xeae4a70b16ce37db9e52fa723c4d9db7b34079d8f2400a4e749109fb398fd54e",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8861",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)4184_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)10355",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)10090",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)10368_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minFiatRedeemAmount",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:69"
          },
          {
            "label": "fiatAdditionalFee",
            "offset": 0,
            "slot": "420",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:74"
          },
          {
            "label": "fiatFlatFee",
            "offset": 0,
            "slot": "421",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:79"
          },
          {
            "label": "redeemRequests",
            "offset": 0,
            "slot": "422",
            "type": "t_mapping(t_uint256,t_struct(Request)10636_storage)",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:84"
          },
          {
            "label": "requestRedeemer",
            "offset": 0,
            "slot": "423",
            "type": "t_address",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:89"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "424",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:94"
          },
          {
            "label": "___gap",
            "offset": 0,
            "slot": "474",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:33"
          },
          {
            "label": "mTbillRedemptionVault",
            "offset": 0,
            "slot": "524",
            "type": "t_contract(IRedemptionVault)10866",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:40"
          },
          {
            "label": "liquidityProvider",
            "offset": 0,
            "slot": "525",
            "type": "t_address",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "526",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "576",
            "type": "t_array(t_uint256)50_storage",
            "contract": "HBUsdcRedemptionVaultWithSwapper",
            "src": "contracts/hbUSDC/HBUsdcRedemptionVaultWithSwapper.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)10090": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)10355": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(IRedemptionVault)10866": {
            "label": "contract IRedemptionVault",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)8861": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)10372": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)10368_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)10636_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)4184_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)10636_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenOut",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)10372",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "amountMToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mTokenRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)10368_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b191e8bb3024ad70d753b0b698fed22eb31a87d7f17acf6c96c14b266aa49a1b": {
      "address": "0x6231f18Bd9d8592a679f4Dc5e2F6d8b6B3990E3A",
      "txHash": "0x004916d24c15a58e735cd92b15dac972b12cd9c5b2559177f59951a7b447a0d8",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8861",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "aggregator",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:22"
          },
          {
            "label": "healthyDiff",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:27"
          },
          {
            "label": "minExpectedAnswer",
            "offset": 0,
            "slot": "53",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:32"
          },
          {
            "label": "maxExpectedAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:42"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)8861": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "211e5962e5feed800e5ca251562da1e4d669aa6df36c4d73f2ef7d70b24286ac": {
      "address": "0x042e8217bE08DAC98aaAee834D47eA3a7f77ba34",
      "txHash": "0x69dc1a7d8ef462b7d86db183e451514b06b24fb40ada8b8fc0783df592a582f8",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:48"
          },
          {
            "label": "accessControl",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(MidasAccessControl)12693",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "mToken",
            "src": "contracts/mToken.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "mToken",
            "src": "contracts/mToken.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)50_storage",
            "contract": "wVLP",
            "src": "contracts/wVLP/wVLP.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MidasAccessControl)12693": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f4da1a365ca7181445ddb7b8e4456c7774c55cc59eff23bbac177ce08354946f": {
      "address": "0x2D5A1823aeaA70319d03BC16f1aC71547a0B29BC",
      "txHash": "0xed303e90aa516a193e9cf1f640acf0152cfd04fe8491aa1f85aed3f9d35df1a8",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)12693",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "description",
            "offset": 0,
            "slot": "51",
            "type": "t_string_storage",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:31"
          },
          {
            "label": "latestRound",
            "offset": 0,
            "slot": "52",
            "type": "t_uint80",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:36"
          },
          {
            "label": "maxAnswerDeviation",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:42"
          },
          {
            "label": "minAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:47"
          },
          {
            "label": "maxAnswer",
            "offset": 0,
            "slot": "55",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:52"
          },
          {
            "label": "_roundData",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint80,t_struct(RoundData)13228_storage)",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WVLPCustomAggregatorFeed",
            "src": "contracts/wVLP/WVLPCustomAggregatorFeed.sol:20"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MidasAccessControl)12693": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int192": {
            "label": "int192",
            "numberOfBytes": "24"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint80,t_struct(RoundData)13228_storage)": {
            "label": "mapping(uint80 => struct CustomAggregatorV3CompatibleFeed.RoundData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoundData)13228_storage": {
            "label": "struct CustomAggregatorV3CompatibleFeed.RoundData",
            "members": [
              {
                "label": "roundId",
                "type": "t_uint80",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "answer",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "updatedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "answeredInRound",
                "type": "t_uint80",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint80": {
            "label": "uint80",
            "numberOfBytes": "10"
          }
        }
      }
    },
    "c63b25f18ff88763ac18f6cb4ef0e7e4b76f995c7534f036108f730883ed6e16": {
      "address": "0xE2Ba9A8323B8DE0931d23055fc3aBB5072808b67",
      "txHash": "0x27c2edac38f22508753316df7fdcb80cbfe92afde16aa561e949818032fcdc79",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)12693",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "aggregator",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:22"
          },
          {
            "label": "healthyDiff",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:27"
          },
          {
            "label": "minExpectedAnswer",
            "offset": 0,
            "slot": "53",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:32"
          },
          {
            "label": "maxExpectedAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WVLPDataFeed",
            "src": "contracts/wVLP/WVLPDataFeed.sol:16"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)12693": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f53b7c6ba6fadcdc077845cdc9a469fedb0a8d51fe1ebf1b5d4763e86c2746f9": {
      "address": "0x542D52F6A20Ab42ed22b2e70c00dD700A42bC828",
      "txHash": "0xfd56a1ccb1d0f06ae6dd59e0f669d6b12a8a5b5a9cd7e265fd66656e34d333a1",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)12693",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)6549_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)16466",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)16201",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)16479_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minMTokenAmountForFirstDeposit",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:78"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "420",
            "type": "t_mapping(t_uint256,t_struct(Request)16218_storage)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:83"
          },
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "421",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "422",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:93"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "472",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WVLPDepositVault",
            "src": "contracts/wVLP/WVLPDepositVault.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)16201": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)16466": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)12693": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)16483": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)16479_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)16218_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)6549_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)16218_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIn",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)16483",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "depositedUsdAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "usdAmountWithoutFees",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)16479_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9d2532964959d11daa115ee8653906108b47e51f3e491d3772f6e8ef477a0214": {
      "address": "0xB0602ad9C6e4191620a78F6638a5733158aba9d2",
      "txHash": "0xea6977b97876a9c39d1ff146bae00056709088efce3c26b726a3ce48e5dbb04a",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)12693",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)6549_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)16466",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)16201",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)16479_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minFiatRedeemAmount",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:69"
          },
          {
            "label": "fiatAdditionalFee",
            "offset": 0,
            "slot": "420",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:74"
          },
          {
            "label": "fiatFlatFee",
            "offset": 0,
            "slot": "421",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:79"
          },
          {
            "label": "redeemRequests",
            "offset": 0,
            "slot": "422",
            "type": "t_mapping(t_uint256,t_struct(Request)16747_storage)",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:84"
          },
          {
            "label": "requestRedeemer",
            "offset": 0,
            "slot": "423",
            "type": "t_address",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:89"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "424",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:94"
          },
          {
            "label": "___gap",
            "offset": 0,
            "slot": "474",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:33"
          },
          {
            "label": "mTbillRedemptionVault",
            "offset": 0,
            "slot": "524",
            "type": "t_contract(IRedemptionVault)16977",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:40"
          },
          {
            "label": "liquidityProvider",
            "offset": 0,
            "slot": "525",
            "type": "t_address",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "526",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "576",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WVLPRedemptionVaultWithSwapper",
            "src": "contracts/wVLP/WVLPRedemptionVaultWithSwapper.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)16201": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)16466": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(IRedemptionVault)16977": {
            "label": "contract IRedemptionVault",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)12693": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)16483": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)16479_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)16747_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)6549_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)16747_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenOut",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)16483",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "amountMToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mTokenRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)16479_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "19a8653bb7c9f002c3cbfcbce427a5830101b8b5b920f2949614bee139164943": {
      "address": "0xE4C53A0fbc1d87006e41848C126aFAdd9E9C1891",
      "txHash": "0x30192b96f0be81a3b02320d58e8cc8d2d6edaf8c036dd29f5222bc4133171ed8",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:48"
          },
          {
            "label": "accessControl",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(MidasAccessControl)9852",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "mToken",
            "src": "contracts/mToken.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "mToken",
            "src": "contracts/mToken.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)50_storage",
            "contract": "dnHYPE",
            "src": "contracts/dnHYPE/dnHYPE.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MidasAccessControl)9852": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "01e8b50e7b5ac754badaed268cb73c5547a394633145055016e6b6bf4424a4c8": {
      "address": "0xD22F530414Ec90cCE84Ed2150659Dc43C87B8c74",
      "txHash": "0x868ec2d19ab680b9ff5215e80fdb4e0a2e0d5670a88f90266a798b025aae7fbf",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)9852",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "description",
            "offset": 0,
            "slot": "51",
            "type": "t_string_storage",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:31"
          },
          {
            "label": "latestRound",
            "offset": 0,
            "slot": "52",
            "type": "t_uint80",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:36"
          },
          {
            "label": "maxAnswerDeviation",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:42"
          },
          {
            "label": "minAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:47"
          },
          {
            "label": "maxAnswer",
            "offset": 0,
            "slot": "55",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:52"
          },
          {
            "label": "_roundData",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint80,t_struct(RoundData)10509_storage)",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DnHypeCustomAggregatorFeed",
            "src": "contracts/dnHYPE/DnHypeCustomAggregatorFeed.sol:20"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MidasAccessControl)9852": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int192": {
            "label": "int192",
            "numberOfBytes": "24"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint80,t_struct(RoundData)10509_storage)": {
            "label": "mapping(uint80 => struct CustomAggregatorV3CompatibleFeed.RoundData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoundData)10509_storage": {
            "label": "struct CustomAggregatorV3CompatibleFeed.RoundData",
            "members": [
              {
                "label": "roundId",
                "type": "t_uint80",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "answer",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "updatedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "answeredInRound",
                "type": "t_uint80",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint80": {
            "label": "uint80",
            "numberOfBytes": "10"
          }
        }
      }
    },
    "8df905aa8b726e6015cb3833e62abf60aeb733bc2b5919e6b84075fad3930fe6": {
      "address": "0x6242Fb5108Bcce1fE3f7A0a6e9461B7663c2bf47",
      "txHash": "0xa61abb0d22b4700efada69031b44b11332c36aab761e78643742f6ce3a0267d4",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)9852",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "aggregator",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:22"
          },
          {
            "label": "healthyDiff",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:27"
          },
          {
            "label": "minExpectedAnswer",
            "offset": 0,
            "slot": "53",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:32"
          },
          {
            "label": "maxExpectedAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DnHypeDataFeed",
            "src": "contracts/dnHYPE/DnHypeDataFeed.sol:16"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)9852": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "eddee7af10f1abb8e1836f6f3595fc193c8c759404107c281a9f9159f5f871f6": {
      "address": "0x712eb0d313E99c8f6f33f2BE4D7B6CE0091A3B38",
      "txHash": "0x405409f7f0fa5a307ca9be74d7524b29d317e829aa88fca13586629d579172b3",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)9852",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)4262_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)11914",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)11649",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)11927_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minMTokenAmountForFirstDeposit",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:78"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "420",
            "type": "t_mapping(t_uint256,t_struct(Request)11666_storage)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:83"
          },
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "421",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "422",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:93"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "472",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DnHypeDepositVault",
            "src": "contracts/dnHYPE/DnHypeDepositVault.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)11649": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)11914": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)9852": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)11931": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)11927_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)11666_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)4262_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)11666_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIn",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)11931",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "depositedUsdAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "usdAmountWithoutFees",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)11927_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c395eb7c6a38f3bfcb4b84b36684fee2cd8ecf99c18ecfafa812df0445006bc6": {
      "address": "0x7E54526ccBc0E16C1d02CAcD5227C01a1BDb98fD",
      "txHash": "0x6382379d684fd8d422a75c9ab4d0e77d17c4483b8f0a8dc31b102a8d2f804f6e",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)9852",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)4262_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)11914",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)11649",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)11927_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minFiatRedeemAmount",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:69"
          },
          {
            "label": "fiatAdditionalFee",
            "offset": 0,
            "slot": "420",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:74"
          },
          {
            "label": "fiatFlatFee",
            "offset": 0,
            "slot": "421",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:79"
          },
          {
            "label": "redeemRequests",
            "offset": 0,
            "slot": "422",
            "type": "t_mapping(t_uint256,t_struct(Request)12195_storage)",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:84"
          },
          {
            "label": "requestRedeemer",
            "offset": 0,
            "slot": "423",
            "type": "t_address",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:89"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "424",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:94"
          },
          {
            "label": "___gap",
            "offset": 0,
            "slot": "474",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:33"
          },
          {
            "label": "mTbillRedemptionVault",
            "offset": 0,
            "slot": "524",
            "type": "t_contract(IRedemptionVault)12425",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:40"
          },
          {
            "label": "liquidityProvider",
            "offset": 0,
            "slot": "525",
            "type": "t_address",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "526",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "576",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DnHypeRedemptionVaultWithSwapper",
            "src": "contracts/dnHYPE/DnHypeRedemptionVaultWithSwapper.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)11649": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)11914": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(IRedemptionVault)12425": {
            "label": "contract IRedemptionVault",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)9852": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)11931": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)11927_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)12195_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)4262_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)12195_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenOut",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)11931",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "amountMToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mTokenRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)11927_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a8d5ae06e94c8e0b4a0c342291b956d784d84103b4a8957941d7c14a9c8ebedd": {
      "address": "0xcE3f7652C12f03Ca5482318aC142045741F1ceee",
      "txHash": "0x17a81491eac1093f9ebae869ceeb9c8de858cf85c01ac10dcb52fcc27d344366",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:48"
          },
          {
            "label": "accessControl",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(MidasAccessControl)8981",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "mToken",
            "src": "contracts/mToken.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "mToken",
            "src": "contracts/mToken.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)50_storage",
            "contract": "dnPUMP",
            "src": "contracts/dnPUMP/dnPUMP.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MidasAccessControl)8981": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "eb8475d35c28cfa031f4c29efb92b73e58fd3e4b73247c0a74cb503ae847c4f2": {
      "address": "0x86eA5565F9E734232BEDbFF4DA625D448c48540B",
      "txHash": "0x4f1092f553fa3135c7fbda15c6beb0c19721b063b7195c1c0ad32b1e329f976c",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8981",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "description",
            "offset": 0,
            "slot": "51",
            "type": "t_string_storage",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:31"
          },
          {
            "label": "latestRound",
            "offset": 0,
            "slot": "52",
            "type": "t_uint80",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:36"
          },
          {
            "label": "maxAnswerDeviation",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:42"
          },
          {
            "label": "minAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:47"
          },
          {
            "label": "maxAnswer",
            "offset": 0,
            "slot": "55",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:52"
          },
          {
            "label": "_roundData",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint80,t_struct(RoundData)9502_storage)",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DnPumpCustomAggregatorFeed",
            "src": "contracts/dnPUMP/DnPumpCustomAggregatorFeed.sol:20"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MidasAccessControl)8981": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int192": {
            "label": "int192",
            "numberOfBytes": "24"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint80,t_struct(RoundData)9502_storage)": {
            "label": "mapping(uint80 => struct CustomAggregatorV3CompatibleFeed.RoundData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoundData)9502_storage": {
            "label": "struct CustomAggregatorV3CompatibleFeed.RoundData",
            "members": [
              {
                "label": "roundId",
                "type": "t_uint80",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "answer",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "updatedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "answeredInRound",
                "type": "t_uint80",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint80": {
            "label": "uint80",
            "numberOfBytes": "10"
          }
        }
      }
    },
    "e88dc821acf52cb09e7a569b222ba05209371cac3b28cea5d033acd5afdb9269": {
      "address": "0xa26E1554741487E0c9ebE6f41004A83dF7d6B2DE",
      "txHash": "0xfecb2a202d141d8ba27d168925fdd63b18cd66d0850d6940920d2d18bd6b45b2",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8981",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "aggregator",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:22"
          },
          {
            "label": "healthyDiff",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:27"
          },
          {
            "label": "minExpectedAnswer",
            "offset": 0,
            "slot": "53",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:32"
          },
          {
            "label": "maxExpectedAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DnPumpDataFeed",
            "src": "contracts/dnPUMP/DnPumpDataFeed.sol:16"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)8981": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ceafb9ac4025a45c8eae27b2c97fd1db9835626618ca9158392f0fb25922e044": {
      "address": "0x22cd29F97C8031d9c916a954DE1F7f26a9980D96",
      "txHash": "0x03e5461f440ed769a2dfaf5d33a3e00d24bf66b82c0c0a907cb931c41278c497",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8981",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)4184_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)10488",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)10210",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)10501_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minMTokenAmountForFirstDeposit",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:78"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "420",
            "type": "t_mapping(t_uint256,t_struct(Request)10227_storage)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:83"
          },
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "421",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:88"
          },
          {
            "label": "maxSupplyCap",
            "offset": 0,
            "slot": "422",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:95"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "423",
            "type": "t_array(t_uint256)49_storage",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:103"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "472",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DnPumpDepositVault",
            "src": "contracts/dnPUMP/DnPumpDepositVault.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)10210": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)10488": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)8981": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)10505": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)10501_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)10227_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)4184_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)10227_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIn",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)10505",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "depositedUsdAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "usdAmountWithoutFees",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)10501_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ddccac94d2ce3bf0493a81a95908942bd835db348f74e630f336527117c89c2f": {
      "address": "0x8c3326546202A034578FA4940b4fC24Aaae88513",
      "txHash": "0x0858436611285a115162200a4a9d5787bdfacb2d819121bb88ef7e6c56b8fd46",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8981",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)4184_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)10488",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)10210",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)10501_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minFiatRedeemAmount",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:69"
          },
          {
            "label": "fiatAdditionalFee",
            "offset": 0,
            "slot": "420",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:74"
          },
          {
            "label": "fiatFlatFee",
            "offset": 0,
            "slot": "421",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:79"
          },
          {
            "label": "redeemRequests",
            "offset": 0,
            "slot": "422",
            "type": "t_mapping(t_uint256,t_struct(Request)10769_storage)",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:84"
          },
          {
            "label": "requestRedeemer",
            "offset": 0,
            "slot": "423",
            "type": "t_address",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:89"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "424",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:94"
          },
          {
            "label": "___gap",
            "offset": 0,
            "slot": "474",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:33"
          },
          {
            "label": "mTbillRedemptionVault",
            "offset": 0,
            "slot": "524",
            "type": "t_contract(IRedemptionVault)10999",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:40"
          },
          {
            "label": "liquidityProvider",
            "offset": 0,
            "slot": "525",
            "type": "t_address",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "526",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "576",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DnPumpRedemptionVaultWithSwapper",
            "src": "contracts/dnPUMP/DnPumpRedemptionVaultWithSwapper.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)10210": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)10488": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(IRedemptionVault)10999": {
            "label": "contract IRedemptionVault",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)8981": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)10505": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)10501_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)10769_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)4184_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)10769_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenOut",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)10505",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "amountMToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mTokenRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)10501_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1942d950b7e539ef5033072d1ad5b2292a735007569775310d5c09f237e3588c": {
      "address": "0x797D81727F9477F84f29D6131690E99Cc3e54Edb",
      "txHash": "0x0d70dfac9cd6726dfc3106070aa544217345bcd871dc82267a94c639afee2c09",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:48"
          },
          {
            "label": "accessControl",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(MidasAccessControl)8982",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "mToken",
            "src": "contracts/mToken.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "mToken",
            "src": "contracts/mToken.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)50_storage",
            "contract": "kitUSD",
            "src": "contracts/kitUSD/kitUSD.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MidasAccessControl)8982": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "933c766c2c6c5a17824ff197b60f2b965fc48c75ac7b0ec54af746cbf3b492c3": {
      "address": "0xBCFAb33B32F1aea737Ed9cFfEa809bD42D35d7aC",
      "txHash": "0x247b10068384ce0c62bc4e1a00f3bf0675b62423355c77b04ac0466deab3704d",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8982",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "description",
            "offset": 0,
            "slot": "51",
            "type": "t_string_storage",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:31"
          },
          {
            "label": "latestRound",
            "offset": 0,
            "slot": "52",
            "type": "t_uint80",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:36"
          },
          {
            "label": "maxAnswerDeviation",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:42"
          },
          {
            "label": "minAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:47"
          },
          {
            "label": "maxAnswer",
            "offset": 0,
            "slot": "55",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:52"
          },
          {
            "label": "_roundData",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint80,t_struct(RoundData)9307_storage)",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)50_storage",
            "contract": "KitUsdCustomAggregatorFeed",
            "src": "contracts/kitUSD/KitUsdCustomAggregatorFeed.sol:20"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MidasAccessControl)8982": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int192": {
            "label": "int192",
            "numberOfBytes": "24"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint80,t_struct(RoundData)9307_storage)": {
            "label": "mapping(uint80 => struct CustomAggregatorV3CompatibleFeed.RoundData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoundData)9307_storage": {
            "label": "struct CustomAggregatorV3CompatibleFeed.RoundData",
            "members": [
              {
                "label": "roundId",
                "type": "t_uint80",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "answer",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "updatedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "answeredInRound",
                "type": "t_uint80",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint80": {
            "label": "uint80",
            "numberOfBytes": "10"
          }
        }
      }
    },
    "a6ae732d1cd0a89aa578cb8cef4e6a7142eab2c747f77a2b82903ebcabaf7fa7": {
      "address": "0x46F5e797A04b1b7F2098442B0493B5bEA6AC70fe",
      "txHash": "0xe9b1a6e35aa764aaa48957b8351173fa2e2bc1ee992e2f95294e654bdf2f6e69",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8982",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "aggregator",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:22"
          },
          {
            "label": "healthyDiff",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:27"
          },
          {
            "label": "minExpectedAnswer",
            "offset": 0,
            "slot": "53",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:32"
          },
          {
            "label": "maxExpectedAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)50_storage",
            "contract": "KitUsdDataFeed",
            "src": "contracts/kitUSD/KitUsdDataFeed.sol:16"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)8982": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ed00b630e3775327c33a92b1317eca4b59d7c365f19a76e231739211b6bd679a": {
      "address": "0x6bD6604df78C9b219980B85baDAe39B080A749c1",
      "txHash": "0x832d59cb8bffe42f36619b66dd513297764ed6cf3bb8469690d4e18ace90b746",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8982",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)4184_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)10293",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)10015",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)10306_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minMTokenAmountForFirstDeposit",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:78"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "420",
            "type": "t_mapping(t_uint256,t_struct(Request)10032_storage)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:83"
          },
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "421",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:88"
          },
          {
            "label": "maxSupplyCap",
            "offset": 0,
            "slot": "422",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:95"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "423",
            "type": "t_array(t_uint256)49_storage",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:103"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "472",
            "type": "t_array(t_uint256)50_storage",
            "contract": "KitUsdDepositVault",
            "src": "contracts/kitUSD/KitUsdDepositVault.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)10015": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)10293": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)8982": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)10310": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)10306_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)10032_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)4184_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)10032_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIn",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)10310",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "depositedUsdAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "usdAmountWithoutFees",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)10306_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bce2ce2f794377f6b4ab5d58beb8c91865e03c83267f986e021eadf14b2929a2": {
      "address": "0x86b748a154e10cfC0acCE16c7b5A30E3a67C6c38",
      "txHash": "0x310b921211bde72d749204fff696a4f5a9fb1feca5ab8cee54d9b30192fe3f1b",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8982",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)4184_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)10293",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)10015",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)10306_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minFiatRedeemAmount",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:69"
          },
          {
            "label": "fiatAdditionalFee",
            "offset": 0,
            "slot": "420",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:74"
          },
          {
            "label": "fiatFlatFee",
            "offset": 0,
            "slot": "421",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:79"
          },
          {
            "label": "redeemRequests",
            "offset": 0,
            "slot": "422",
            "type": "t_mapping(t_uint256,t_struct(Request)10574_storage)",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:84"
          },
          {
            "label": "requestRedeemer",
            "offset": 0,
            "slot": "423",
            "type": "t_address",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:89"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "424",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:94"
          },
          {
            "label": "___gap",
            "offset": 0,
            "slot": "474",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:33"
          },
          {
            "label": "mTbillRedemptionVault",
            "offset": 0,
            "slot": "524",
            "type": "t_contract(IRedemptionVault)10804",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:40"
          },
          {
            "label": "liquidityProvider",
            "offset": 0,
            "slot": "525",
            "type": "t_address",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "526",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "576",
            "type": "t_array(t_uint256)50_storage",
            "contract": "KitUsdRedemptionVaultWithSwapper",
            "src": "contracts/kitUSD/KitUsdRedemptionVaultWithSwapper.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)10015": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)10293": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(IRedemptionVault)10804": {
            "label": "contract IRedemptionVault",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)8982": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)10310": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)10306_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)10574_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)4184_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)10574_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenOut",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)10310",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "amountMToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mTokenRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)10306_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9d7d0e4b18ea46c4c97f2f16263997231a520d7e3d1ead9bd23cda3a731e0866": {
      "address": "0x47CfC17962F302AfbDD190Bff22529cED437745D",
      "txHash": "0xdfae9ee7a9663fd603e2f5184c2fd3eaff508a2af333c4e3718245afa8d48ac9",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:48"
          },
          {
            "label": "accessControl",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(MidasAccessControl)8982",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "mToken",
            "src": "contracts/mToken.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "mToken",
            "src": "contracts/mToken.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)50_storage",
            "contract": "kitHYPE",
            "src": "contracts/kitHYPE/kitHYPE.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MidasAccessControl)8982": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "73b65f72b7481f67d900f2c1f67d858ea5fb962f845ab29b9967763748c7da12": {
      "address": "0x9f489624b7128Cf2D327e72b1d1671364234752A",
      "txHash": "0x55f2bf429609d87142800f8703a4a34caa61c790be58d7e53ed6b8747ec54187",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8982",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "description",
            "offset": 0,
            "slot": "51",
            "type": "t_string_storage",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:31"
          },
          {
            "label": "latestRound",
            "offset": 0,
            "slot": "52",
            "type": "t_uint80",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:36"
          },
          {
            "label": "maxAnswerDeviation",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:42"
          },
          {
            "label": "minAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:47"
          },
          {
            "label": "maxAnswer",
            "offset": 0,
            "slot": "55",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:52"
          },
          {
            "label": "_roundData",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint80,t_struct(RoundData)9307_storage)",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)50_storage",
            "contract": "KitHypeCustomAggregatorFeed",
            "src": "contracts/kitHYPE/KitHypeCustomAggregatorFeed.sol:20"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MidasAccessControl)8982": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int192": {
            "label": "int192",
            "numberOfBytes": "24"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint80,t_struct(RoundData)9307_storage)": {
            "label": "mapping(uint80 => struct CustomAggregatorV3CompatibleFeed.RoundData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoundData)9307_storage": {
            "label": "struct CustomAggregatorV3CompatibleFeed.RoundData",
            "members": [
              {
                "label": "roundId",
                "type": "t_uint80",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "answer",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "updatedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "answeredInRound",
                "type": "t_uint80",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint80": {
            "label": "uint80",
            "numberOfBytes": "10"
          }
        }
      }
    },
    "9a6547eeb110a893ccd899781b52ea916ee4f3320df388a433c7f6def36742d6": {
      "address": "0x8d28BeF01696E8bC533f219BE482348CF9894513",
      "txHash": "0x48b3d61e68918add1b50f28eff84fcfab8178893c064ee63b4287383ba038bfd",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8982",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "aggregator",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:22"
          },
          {
            "label": "healthyDiff",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:27"
          },
          {
            "label": "minExpectedAnswer",
            "offset": 0,
            "slot": "53",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:32"
          },
          {
            "label": "maxExpectedAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)50_storage",
            "contract": "KitHypeDataFeed",
            "src": "contracts/kitHYPE/KitHypeDataFeed.sol:16"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)8982": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bc047eda704dac51cf74112f79ac5ce93ba631db2561a576acdaf62c3848e9db": {
      "address": "0x2AE9f6E88cf1aB230e3d144BDd62186E49B8ad9B",
      "txHash": "0x1edf2cefedbac77973275c2ef94c7a3e2d90569a112f8b9924e1ae466355898c",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8982",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)4184_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)10293",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)10015",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)10306_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minMTokenAmountForFirstDeposit",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:78"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "420",
            "type": "t_mapping(t_uint256,t_struct(Request)10032_storage)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:83"
          },
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "421",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:88"
          },
          {
            "label": "maxSupplyCap",
            "offset": 0,
            "slot": "422",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:95"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "423",
            "type": "t_array(t_uint256)49_storage",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:103"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "472",
            "type": "t_array(t_uint256)50_storage",
            "contract": "KitHypeDepositVault",
            "src": "contracts/kitHYPE/KitHypeDepositVault.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)10015": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)10293": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)8982": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)10310": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)10306_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)10032_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)4184_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)10032_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIn",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)10310",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "depositedUsdAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "usdAmountWithoutFees",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)10306_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0775e4c2388450c6f3bf8562388d73f53e4277125c28b2f785f43e27af425bca": {
      "address": "0x73c4f573E560518598914e423A27F1B42D33252b",
      "txHash": "0xa1c4affe4852401c4adb7aebd3a361238fe046d73499768833a26728d761a4f9",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8982",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)4184_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)10293",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)10015",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)10306_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minFiatRedeemAmount",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:69"
          },
          {
            "label": "fiatAdditionalFee",
            "offset": 0,
            "slot": "420",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:74"
          },
          {
            "label": "fiatFlatFee",
            "offset": 0,
            "slot": "421",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:79"
          },
          {
            "label": "redeemRequests",
            "offset": 0,
            "slot": "422",
            "type": "t_mapping(t_uint256,t_struct(Request)10574_storage)",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:84"
          },
          {
            "label": "requestRedeemer",
            "offset": 0,
            "slot": "423",
            "type": "t_address",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:89"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "424",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:94"
          },
          {
            "label": "___gap",
            "offset": 0,
            "slot": "474",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:33"
          },
          {
            "label": "mTbillRedemptionVault",
            "offset": 0,
            "slot": "524",
            "type": "t_contract(IRedemptionVault)10804",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:40"
          },
          {
            "label": "liquidityProvider",
            "offset": 0,
            "slot": "525",
            "type": "t_address",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "526",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "576",
            "type": "t_array(t_uint256)50_storage",
            "contract": "KitHypeRedemptionVaultWithSwapper",
            "src": "contracts/kitHYPE/KitHypeRedemptionVaultWithSwapper.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)10015": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)10293": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(IRedemptionVault)10804": {
            "label": "contract IRedemptionVault",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)8982": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)10310": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)10306_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)10574_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)4184_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)10574_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenOut",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)10310",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "amountMToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mTokenRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)10306_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "db9b3281c6c01b6659f758b3046862128238a2ce58dc1bba6cc6920e1a0122b6": {
      "address": "0x0bd8CF0f6926D551b8E7eAcBb00E5cA5F6c0E82C",
      "txHash": "0x6743ebcdae96b33a61fdde5b92dca3c83eea134a7ebf7f53119f1fc8d29c6f74",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:48"
          },
          {
            "label": "accessControl",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(MidasAccessControl)8982",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "mToken",
            "src": "contracts/mToken.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "mToken",
            "src": "contracts/mToken.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)50_storage",
            "contract": "kitBTC",
            "src": "contracts/kitBTC/kitBTC.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MidasAccessControl)8982": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "be7e5d0f9ee9cb79962219afe222851aa88031ad5846e83d4d65cfb73f174143": {
      "address": "0x6707D9630531deBCA91a353838F6E30bf1A60294",
      "txHash": "0x1495f1a96e8142c4b4a93c5c982c288eac9287386d38d0ab257a86b5aed38ea9",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8982",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "description",
            "offset": 0,
            "slot": "51",
            "type": "t_string_storage",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:31"
          },
          {
            "label": "latestRound",
            "offset": 0,
            "slot": "52",
            "type": "t_uint80",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:36"
          },
          {
            "label": "maxAnswerDeviation",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:42"
          },
          {
            "label": "minAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:47"
          },
          {
            "label": "maxAnswer",
            "offset": 0,
            "slot": "55",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:52"
          },
          {
            "label": "_roundData",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint80,t_struct(RoundData)9307_storage)",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)50_storage",
            "contract": "KitBtcCustomAggregatorFeed",
            "src": "contracts/kitBTC/KitBtcCustomAggregatorFeed.sol:20"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MidasAccessControl)8982": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int192": {
            "label": "int192",
            "numberOfBytes": "24"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint80,t_struct(RoundData)9307_storage)": {
            "label": "mapping(uint80 => struct CustomAggregatorV3CompatibleFeed.RoundData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoundData)9307_storage": {
            "label": "struct CustomAggregatorV3CompatibleFeed.RoundData",
            "members": [
              {
                "label": "roundId",
                "type": "t_uint80",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "answer",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "updatedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "answeredInRound",
                "type": "t_uint80",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint80": {
            "label": "uint80",
            "numberOfBytes": "10"
          }
        }
      }
    },
    "cb3c40e1f14fcbf975a0a0b8584afeb1f1356427a44301dbe4aea5332af12d8e": {
      "address": "0xd579356C15975EA2cdD3a6e30Bac96E87EfD8Ae8",
      "txHash": "0xe242d38a8851f4957834825521073877cbda56f30d31bb90a23ef4212688dc0c",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8982",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "aggregator",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:22"
          },
          {
            "label": "healthyDiff",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:27"
          },
          {
            "label": "minExpectedAnswer",
            "offset": 0,
            "slot": "53",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:32"
          },
          {
            "label": "maxExpectedAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)50_storage",
            "contract": "KitBtcDataFeed",
            "src": "contracts/kitBTC/KitBtcDataFeed.sol:16"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)8982": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d8a91611eb721c5ed277ec5be399de2e8375a44fe602814764676bfe8a233f60": {
      "address": "0x12d55a84081BA2Be659045b0381eF1d9b8a26691",
      "txHash": "0x491d3673c28c138cc30fc5f61d58b1cf87f4a865ff75cf2ab2bed8ce252ce5c8",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8982",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)4184_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)10293",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)10015",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)10306_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minMTokenAmountForFirstDeposit",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:78"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "420",
            "type": "t_mapping(t_uint256,t_struct(Request)10032_storage)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:83"
          },
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "421",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:88"
          },
          {
            "label": "maxSupplyCap",
            "offset": 0,
            "slot": "422",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:95"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "423",
            "type": "t_array(t_uint256)49_storage",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:103"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "472",
            "type": "t_array(t_uint256)50_storage",
            "contract": "KitBtcDepositVault",
            "src": "contracts/kitBTC/KitBtcDepositVault.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)10015": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)10293": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)8982": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)10310": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)10306_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)10032_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)4184_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)10032_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIn",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)10310",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "depositedUsdAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "usdAmountWithoutFees",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)10306_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5167dbfc30c1a53e3f685a7b22f3a38b53f91cd2d700e1847166aef9f724eae0": {
      "address": "0xBD1b1ED8DDa263e8Ed7CCBFA8Bc101f2AeF06C81",
      "txHash": "0x706c870633e7592911a1f0168a2f82a5cf00de34e9288deb081e493808def809",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8982",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)4184_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)10293",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)10015",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)10306_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minFiatRedeemAmount",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:69"
          },
          {
            "label": "fiatAdditionalFee",
            "offset": 0,
            "slot": "420",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:74"
          },
          {
            "label": "fiatFlatFee",
            "offset": 0,
            "slot": "421",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:79"
          },
          {
            "label": "redeemRequests",
            "offset": 0,
            "slot": "422",
            "type": "t_mapping(t_uint256,t_struct(Request)10574_storage)",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:84"
          },
          {
            "label": "requestRedeemer",
            "offset": 0,
            "slot": "423",
            "type": "t_address",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:89"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "424",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:94"
          },
          {
            "label": "___gap",
            "offset": 0,
            "slot": "474",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:33"
          },
          {
            "label": "mTbillRedemptionVault",
            "offset": 0,
            "slot": "524",
            "type": "t_contract(IRedemptionVault)10804",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:40"
          },
          {
            "label": "liquidityProvider",
            "offset": 0,
            "slot": "525",
            "type": "t_address",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "526",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "576",
            "type": "t_array(t_uint256)50_storage",
            "contract": "KitBtcRedemptionVaultWithSwapper",
            "src": "contracts/kitBTC/KitBtcRedemptionVaultWithSwapper.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)10015": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)10293": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(IRedemptionVault)10804": {
            "label": "contract IRedemptionVault",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)8982": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)10310": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)10306_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)10574_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)4184_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)10574_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenOut",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)10310",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "amountMToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mTokenRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)10306_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b5acbee1ed90540ccd8c369853adc15a37e848acacfb41250859337280552eb1": {
      "address": "0xa89fa5cA257e70ec8B34B8103Fd4E8093150da86",
      "txHash": "0xd0d2ef6059f4a8f8677575963e58a3b176793fcc8466285c1c46bda8f009309d",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)10170",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "numeratorFeed",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IDataFeed)12553",
            "contract": "CompositeDataFeed",
            "src": "contracts/feeds/CompositeDataFeed.sol:26"
          },
          {
            "label": "denominatorFeed",
            "offset": 0,
            "slot": "52",
            "type": "t_contract(IDataFeed)12553",
            "contract": "CompositeDataFeed",
            "src": "contracts/feeds/CompositeDataFeed.sol:32"
          },
          {
            "label": "minExpectedAnswer",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "CompositeDataFeed",
            "src": "contracts/feeds/CompositeDataFeed.sol:37"
          },
          {
            "label": "maxExpectedAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_uint256",
            "contract": "CompositeDataFeed",
            "src": "contracts/feeds/CompositeDataFeed.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "CompositeDataFeed",
            "src": "contracts/feeds/CompositeDataFeed.sol:47"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IDataFeed)12553": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)10170": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e2ea667703a2e9136adc3c57e5f84ac580e44e360e1a3ae786bf4a5a3eda6a32": {
      "address": "0x4A8Ba2812246C40fa9e38E19d224E159b1fCdA11",
      "txHash": "0xfe921e574281962cb0638e3e82bff99b4bebeb8061e5a2c77f0a6c821aa6a026",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:48"
          },
          {
            "label": "accessControl",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(MidasAccessControl)10096",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "mToken",
            "src": "contracts/mToken.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "mToken",
            "src": "contracts/mToken.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)50_storage",
            "contract": "dnFART",
            "src": "contracts/dnFART/dnFART.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MidasAccessControl)10096": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fe136207b800e50617e8db8e030a1bc7ce869d0f829a34f793f4f7f0e3a666eb": {
      "address": "0xFD8B962243287E6c92506cb0a869D2aDFCe100A9",
      "txHash": "0x73e22d9d97ca8ab0c4108018b74a649d103102557f45a5b767f18ab446355728",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)10096",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "description",
            "offset": 0,
            "slot": "51",
            "type": "t_string_storage",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:31"
          },
          {
            "label": "latestRound",
            "offset": 0,
            "slot": "52",
            "type": "t_uint80",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:36"
          },
          {
            "label": "maxAnswerDeviation",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:42"
          },
          {
            "label": "minAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:47"
          },
          {
            "label": "maxAnswer",
            "offset": 0,
            "slot": "55",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:52"
          },
          {
            "label": "_roundData",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint80,t_struct(RoundData)11256_storage)",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DnFartCustomAggregatorFeed",
            "src": "contracts/dnFART/DnFartCustomAggregatorFeed.sol:20"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MidasAccessControl)10096": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int192": {
            "label": "int192",
            "numberOfBytes": "24"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint80,t_struct(RoundData)11256_storage)": {
            "label": "mapping(uint80 => struct CustomAggregatorV3CompatibleFeed.RoundData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoundData)11256_storage": {
            "label": "struct CustomAggregatorV3CompatibleFeed.RoundData",
            "members": [
              {
                "label": "roundId",
                "type": "t_uint80",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "answer",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "updatedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "answeredInRound",
                "type": "t_uint80",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint80": {
            "label": "uint80",
            "numberOfBytes": "10"
          }
        }
      }
    },
    "5b470762966cc557bf529ad95436d7b670a9090abe555208ff8436dd8fa5801b": {
      "address": "0x1549fE10C3DD76e0F1A7da054E25D12B1D4eDCB3",
      "txHash": "0x6841ac670868f542d2879aea294bd90399997383e52aa560837af173947f2b01",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)10096",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "aggregator",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:22"
          },
          {
            "label": "healthyDiff",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:27"
          },
          {
            "label": "minExpectedAnswer",
            "offset": 0,
            "slot": "53",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:32"
          },
          {
            "label": "maxExpectedAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DnFartDataFeed",
            "src": "contracts/dnFART/DnFartDataFeed.sol:16"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)10096": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "209bd62434330a7bb0f27bfc9b2de2ec1debc8de676ca3d40e486d742f1bacbd": {
      "address": "0x5AF51418Eb6B47b6398aD0240d1869CB3BDCfbAd",
      "txHash": "0x360635fa2d4eeea2f63cc08813c4c90c42f0cb7b29f7b1e742b46bad291b34b6",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)10096",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)4262_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)12954",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)12676",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)12967_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minMTokenAmountForFirstDeposit",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:78"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "420",
            "type": "t_mapping(t_uint256,t_struct(Request)12693_storage)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:83"
          },
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "421",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:88"
          },
          {
            "label": "maxSupplyCap",
            "offset": 0,
            "slot": "422",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:95"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "423",
            "type": "t_array(t_uint256)49_storage",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:103"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "472",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DnFartDepositVault",
            "src": "contracts/dnFART/DnFartDepositVault.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)12676": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)12954": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)10096": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)12971": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)12967_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)12693_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)4262_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)12693_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIn",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)12971",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "depositedUsdAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "usdAmountWithoutFees",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)12967_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "74c3beef1f2a3654c03724b71f5de868d6cf6d200b775adc7863d5d553f07971": {
      "address": "0xa61Db29F618FBdD25d6490a943B5e4CC11d620A6",
      "txHash": "0xbf62112110c75c27e13e2cae5f9da010187bfafdeb5e3e4f840ae2875e8de517",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)10096",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)4262_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)12954",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)12676",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)12967_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minFiatRedeemAmount",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:69"
          },
          {
            "label": "fiatAdditionalFee",
            "offset": 0,
            "slot": "420",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:74"
          },
          {
            "label": "fiatFlatFee",
            "offset": 0,
            "slot": "421",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:79"
          },
          {
            "label": "redeemRequests",
            "offset": 0,
            "slot": "422",
            "type": "t_mapping(t_uint256,t_struct(Request)13235_storage)",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:84"
          },
          {
            "label": "requestRedeemer",
            "offset": 0,
            "slot": "423",
            "type": "t_address",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:89"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "424",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:94"
          },
          {
            "label": "___gap",
            "offset": 0,
            "slot": "474",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:33"
          },
          {
            "label": "mTbillRedemptionVault",
            "offset": 0,
            "slot": "524",
            "type": "t_contract(IRedemptionVault)13465",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:40"
          },
          {
            "label": "liquidityProvider",
            "offset": 0,
            "slot": "525",
            "type": "t_address",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "526",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "576",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DnFartRedemptionVaultWithSwapper",
            "src": "contracts/dnFART/DnFartRedemptionVaultWithSwapper.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)12676": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)12954": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(IRedemptionVault)13465": {
            "label": "contract IRedemptionVault",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)10096": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)12971": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)12967_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)13235_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)4262_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)13235_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenOut",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)12971",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "amountMToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mTokenRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)12967_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "eeede1d3b3151849e0b8f9fe2bbdefda9b8c696ead0b74235e8f28ad27cf4116": {
      "address": "0xece723d9381a65c32188C132f642B3a2DBC8C98e",
      "txHash": "0x42581a4ce74a0f4098c51910c4381b883c2c2385d9be9b888a24259027315ecd",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:48"
          },
          {
            "label": "accessControl",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(MidasAccessControl)15037",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "mToken",
            "src": "contracts/mToken.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "mToken",
            "src": "contracts/mToken.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)50_storage",
            "contract": "wNLP",
            "src": "contracts/products/wNLP/wNLP.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MidasAccessControl)15037": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "adc73dba9e37b9bcbf2f0f2561fd41823b93ca20f71397d9e7962c59b45cc41b": {
      "address": "0x96d6091b3c137E63E3cbDf9c70b529508aC6e175",
      "txHash": "0x8d30e766259b8fedc161a9e0f49ef3b6789dc43a4bce53456f8c266f86d63e3e",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)15037",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "description",
            "offset": 0,
            "slot": "51",
            "type": "t_string_storage",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:31"
          },
          {
            "label": "latestRound",
            "offset": 0,
            "slot": "52",
            "type": "t_uint80",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:36"
          },
          {
            "label": "maxAnswerDeviation",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:42"
          },
          {
            "label": "minAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:47"
          },
          {
            "label": "maxAnswer",
            "offset": 0,
            "slot": "55",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:52"
          },
          {
            "label": "_roundData",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint80,t_struct(RoundData)15732_storage)",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WNlpCustomAggregatorFeed",
            "src": "contracts/products/wNLP/WNlpCustomAggregatorFeed.sol:20"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MidasAccessControl)15037": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int192": {
            "label": "int192",
            "numberOfBytes": "24"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint80,t_struct(RoundData)15732_storage)": {
            "label": "mapping(uint80 => struct CustomAggregatorV3CompatibleFeed.RoundData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoundData)15732_storage": {
            "label": "struct CustomAggregatorV3CompatibleFeed.RoundData",
            "members": [
              {
                "label": "roundId",
                "type": "t_uint80",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "answer",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "updatedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "answeredInRound",
                "type": "t_uint80",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint80": {
            "label": "uint80",
            "numberOfBytes": "10"
          }
        }
      }
    },
    "49bf78a6bddb94b1346b69e2ac43f7efe3cc133d52ef3b0158dd69fe3a7397c5": {
      "address": "0xb697f13dABc99223e194fDc8dAA0aD87A6a46C56",
      "txHash": "0xcf02f50a3ae09894edf51a38d3c53c0f927d6a7ee13cd605d874c225260d0377",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)15037",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "aggregator",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:22"
          },
          {
            "label": "healthyDiff",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:27"
          },
          {
            "label": "minExpectedAnswer",
            "offset": 0,
            "slot": "53",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:32"
          },
          {
            "label": "maxExpectedAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WNlpDataFeed",
            "src": "contracts/products/wNLP/WNlpDataFeed.sol:16"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)15037": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b27abbd370d9c5ad4e3851f1f808cebfda7143b9410e20ca9cea69fb422e6adb": {
      "address": "0xb379C38cF7259EF4b5dd0c638B248BD2Bbe4a0e5",
      "txHash": "0x6a627277863d366e665b66ec66fd75194e683badbc3edce7688ff1f050444a60",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)15037",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)8079_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)17794",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)17509",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)17807_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minMTokenAmountForFirstDeposit",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:78"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "420",
            "type": "t_mapping(t_uint256,t_struct(Request)17526_storage)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:83"
          },
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "421",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:88"
          },
          {
            "label": "maxSupplyCap",
            "offset": 0,
            "slot": "422",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:95"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "423",
            "type": "t_array(t_uint256)49_storage",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:103"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "472",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WNlpDepositVault",
            "src": "contracts/products/wNLP/WNlpDepositVault.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)17509": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)17794": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)15037": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)17811": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)17807_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)17526_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)8079_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)17526_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIn",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)17811",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "depositedUsdAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "usdAmountWithoutFees",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)17807_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a5ff595801df75dd0155f99e6b925ea0bb0a92659284a93707707a2500ca91b0": {
      "address": "0xcE66B1218118D5aDacd015520D2e208263965B76",
      "txHash": "0xfb3a0fe6e4305c3ba0398cd31b4645d9b08cc100671c0edacd953a3d82d8f9f1",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)15037",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)8079_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)17794",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)17509",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)17807_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minFiatRedeemAmount",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:69"
          },
          {
            "label": "fiatAdditionalFee",
            "offset": 0,
            "slot": "420",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:74"
          },
          {
            "label": "fiatFlatFee",
            "offset": 0,
            "slot": "421",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:79"
          },
          {
            "label": "redeemRequests",
            "offset": 0,
            "slot": "422",
            "type": "t_mapping(t_uint256,t_struct(Request)18075_storage)",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:84"
          },
          {
            "label": "requestRedeemer",
            "offset": 0,
            "slot": "423",
            "type": "t_address",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:89"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "424",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:94"
          },
          {
            "label": "___gap",
            "offset": 0,
            "slot": "474",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:33"
          },
          {
            "label": "mTbillRedemptionVault",
            "offset": 0,
            "slot": "524",
            "type": "t_contract(IRedemptionVault)18312",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:40"
          },
          {
            "label": "liquidityProvider",
            "offset": 0,
            "slot": "525",
            "type": "t_address",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "526",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "576",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WNlpRedemptionVaultWithSwapper",
            "src": "contracts/products/wNLP/WNlpRedemptionVaultWithSwapper.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)17509": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)17794": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(IRedemptionVault)18312": {
            "label": "contract IRedemptionVault",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)15037": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)17811": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)17807_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)18075_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)8079_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)18075_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenOut",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)17811",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "amountMToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mTokenRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)17807_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "75c2d18c5a14f07cc0bd6fc4dda98733b4d5f24a19b85b751a6fa9eb7bcc1249": {
      "address": "0xC3CE68575184c24d3c3fa2f140c7Fe47F00C6c77",
      "txHash": "0xe68eecab6de402eb3da5c19453df3ccc7125ebb3372f12f33f517d5f1d1e99fa",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:48"
          },
          {
            "label": "accessControl",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(MidasAccessControl)15037",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "mToken",
            "src": "contracts/mToken.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "mToken",
            "src": "contracts/mToken.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)50_storage",
            "contract": "dnETH",
            "src": "contracts/products/dnETH/dnETH.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MidasAccessControl)15037": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a76113b5018d24683228eaf6956beba97cede6cafc16f2582caf6567b80f7eca": {
      "address": "0xf213DF042f19006a48e5078340d09B3abE017Fcc",
      "txHash": "0x0fc7c4084d844616ce6feebdb554f81934c8bd04cb97c4a4b33f284f099a96dc",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)15037",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "description",
            "offset": 0,
            "slot": "51",
            "type": "t_string_storage",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:31"
          },
          {
            "label": "latestRound",
            "offset": 0,
            "slot": "52",
            "type": "t_uint80",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:36"
          },
          {
            "label": "maxAnswerDeviation",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:42"
          },
          {
            "label": "minAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:47"
          },
          {
            "label": "maxAnswer",
            "offset": 0,
            "slot": "55",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:52"
          },
          {
            "label": "_roundData",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint80,t_struct(RoundData)15732_storage)",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DnEthCustomAggregatorFeed",
            "src": "contracts/products/dnETH/DnEthCustomAggregatorFeed.sol:20"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MidasAccessControl)15037": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int192": {
            "label": "int192",
            "numberOfBytes": "24"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint80,t_struct(RoundData)15732_storage)": {
            "label": "mapping(uint80 => struct CustomAggregatorV3CompatibleFeed.RoundData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoundData)15732_storage": {
            "label": "struct CustomAggregatorV3CompatibleFeed.RoundData",
            "members": [
              {
                "label": "roundId",
                "type": "t_uint80",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "answer",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "updatedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "answeredInRound",
                "type": "t_uint80",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint80": {
            "label": "uint80",
            "numberOfBytes": "10"
          }
        }
      }
    },
    "eb73fe1c390a67369a34ffe8e0d8acac30a4793770f1fa008ab8196ecbc7ee88": {
      "address": "0xb1dd948591880a6628911D9b6Ed03EeDf802E0a9",
      "txHash": "0xf35f64e3085f5a1e23c1bc8e0aa58685ccdc36e7d2b220fe1942013dee1fb02c",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)15037",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "aggregator",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:22"
          },
          {
            "label": "healthyDiff",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:27"
          },
          {
            "label": "minExpectedAnswer",
            "offset": 0,
            "slot": "53",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:32"
          },
          {
            "label": "maxExpectedAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DnEthDataFeed",
            "src": "contracts/products/dnETH/DnEthDataFeed.sol:16"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)15037": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a3053721702540f4bc4d026b0ae0a70e06f8725914c8804a51dde2361710eb96": {
      "address": "0xED760c86b7edAEFC4a8fa3922cA01A7E46007f37",
      "txHash": "0x1078107d1d0744d6866a1585536eb33b93e0cf48414d2190ce4ae7fc921f989b",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)15037",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)8079_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)17794",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)17509",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)17807_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minMTokenAmountForFirstDeposit",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:78"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "420",
            "type": "t_mapping(t_uint256,t_struct(Request)17526_storage)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:83"
          },
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "421",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:88"
          },
          {
            "label": "maxSupplyCap",
            "offset": 0,
            "slot": "422",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:95"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "423",
            "type": "t_array(t_uint256)49_storage",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:103"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "472",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DnEthDepositVault",
            "src": "contracts/products/dnETH/DnEthDepositVault.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)17509": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)17794": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)15037": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)17811": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)17807_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)17526_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)8079_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)17526_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIn",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)17811",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "depositedUsdAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "usdAmountWithoutFees",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)17807_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d576d78d0c8fa2e4439b755b0d5772fe04f7356ee6b6ec3d11044dbc73780d55": {
      "address": "0x1AFC880769833A981C01222066bF4A5572072874",
      "txHash": "0x89c2f3a1abd750c43e7814e31d22e3f24babbc6d9fe42d1a26f5536092c9213e",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)15037",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)8079_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)17794",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)17509",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)17807_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minFiatRedeemAmount",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:69"
          },
          {
            "label": "fiatAdditionalFee",
            "offset": 0,
            "slot": "420",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:74"
          },
          {
            "label": "fiatFlatFee",
            "offset": 0,
            "slot": "421",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:79"
          },
          {
            "label": "redeemRequests",
            "offset": 0,
            "slot": "422",
            "type": "t_mapping(t_uint256,t_struct(Request)18075_storage)",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:84"
          },
          {
            "label": "requestRedeemer",
            "offset": 0,
            "slot": "423",
            "type": "t_address",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:89"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "424",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:94"
          },
          {
            "label": "___gap",
            "offset": 0,
            "slot": "474",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:33"
          },
          {
            "label": "mTbillRedemptionVault",
            "offset": 0,
            "slot": "524",
            "type": "t_contract(IRedemptionVault)18312",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:40"
          },
          {
            "label": "liquidityProvider",
            "offset": 0,
            "slot": "525",
            "type": "t_address",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "526",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "576",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DnEthRedemptionVaultWithSwapper",
            "src": "contracts/products/dnETH/DnEthRedemptionVaultWithSwapper.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)17509": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)17794": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(IRedemptionVault)18312": {
            "label": "contract IRedemptionVault",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)15037": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)17811": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)17807_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)18075_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)8079_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)18075_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenOut",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)17811",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "amountMToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mTokenRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)17807_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "adb37abb7691e3d9df4e301a71e18ab0c004517f9e1f402a0f1e340fd2dd28cc": {
      "address": "0x65F08f8A8AaB1334AD3852B231c812625BD94a73",
      "txHash": "0x32a30da9ea26619baee29a92cba3ec964388bdf3a40880743fc158817da5392d",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:48"
          },
          {
            "label": "accessControl",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(MidasAccessControl)15037",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "mToken",
            "src": "contracts/mToken.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "mToken",
            "src": "contracts/mToken.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)50_storage",
            "contract": "dnTEST",
            "src": "contracts/products/dnTEST/dnTEST.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MidasAccessControl)15037": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e79f96a5f8e5e5632ed246ad100a3540ef851ffc92687cf910270e6ad4aaa886": {
      "address": "0xC4d238629Ea43090E05528834B689E475B9D867D",
      "txHash": "0xfa6c2251b0d14b827cc38f70b92484477e19db3457c3c127a9fe6a7483ea5b1a",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)2433",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "description",
            "offset": 0,
            "slot": "51",
            "type": "t_string_storage",
            "contract": "CustomAggregatorV3CompatibleFeedGrowth",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeedGrowth.sol:41"
          },
          {
            "label": "maxAnswerDeviation",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "CustomAggregatorV3CompatibleFeedGrowth",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeedGrowth.sol:47"
          },
          {
            "label": "minAnswer",
            "offset": 0,
            "slot": "53",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeedGrowth",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeedGrowth.sol:52"
          },
          {
            "label": "maxAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeedGrowth",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeedGrowth.sol:57"
          },
          {
            "label": "minGrowthApr",
            "offset": 0,
            "slot": "55",
            "type": "t_int80",
            "contract": "CustomAggregatorV3CompatibleFeedGrowth",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeedGrowth.sol:62"
          },
          {
            "label": "maxGrowthApr",
            "offset": 10,
            "slot": "55",
            "type": "t_int80",
            "contract": "CustomAggregatorV3CompatibleFeedGrowth",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeedGrowth.sol:67"
          },
          {
            "label": "latestRound",
            "offset": 20,
            "slot": "55",
            "type": "t_uint80",
            "contract": "CustomAggregatorV3CompatibleFeedGrowth",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeedGrowth.sol:72"
          },
          {
            "label": "onlyUp",
            "offset": 30,
            "slot": "55",
            "type": "t_bool",
            "contract": "CustomAggregatorV3CompatibleFeedGrowth",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeedGrowth.sol:78"
          },
          {
            "label": "_roundData",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint80,t_struct(RoundDataWithGrowth)2597_storage)",
            "contract": "CustomAggregatorV3CompatibleFeedGrowth",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeedGrowth.sol:83"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)50_storage",
            "contract": "CustomAggregatorV3CompatibleFeedGrowth",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeedGrowth.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DnTestCustomAggregatorFeedGrowth",
            "src": "contracts/products/dnTEST/DnTestCustomAggregatorFeedGrowth.sol:21"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MidasAccessControl)2433": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int192": {
            "label": "int192",
            "numberOfBytes": "24"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_int80": {
            "label": "int80",
            "numberOfBytes": "10"
          },
          "t_mapping(t_uint80,t_struct(RoundDataWithGrowth)2597_storage)": {
            "label": "mapping(uint80 => struct CustomAggregatorV3CompatibleFeedGrowth.RoundDataWithGrowth)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoundDataWithGrowth)2597_storage": {
            "label": "struct CustomAggregatorV3CompatibleFeedGrowth.RoundDataWithGrowth",
            "members": [
              {
                "label": "roundId",
                "type": "t_uint80",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "answeredInRound",
                "type": "t_uint80",
                "offset": 10,
                "slot": "0"
              },
              {
                "label": "growthApr",
                "type": "t_int80",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "answer",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "updatedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint80": {
            "label": "uint80",
            "numberOfBytes": "10"
          }
        }
      }
    },
    "0945f1c047763639243b2002ce45d8bbf88a471f295c651c16ac30e9afac0374": {
      "address": "0x1BAf98537E0c9Cc2706D9Ac13550dF71eBE5393D",
      "txHash": "0xea2af71442efca6283d364b68490ae3a066e3d1194e2dd99770364c495c87851",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)15037",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "aggregator",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:22"
          },
          {
            "label": "healthyDiff",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:27"
          },
          {
            "label": "minExpectedAnswer",
            "offset": 0,
            "slot": "53",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:32"
          },
          {
            "label": "maxExpectedAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DnTestDataFeed",
            "src": "contracts/products/dnTEST/DnTestDataFeed.sol:16"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)15037": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fe5abab5e0d7fa9acd6121cdbd9c85f3cdcb0efd8565b78e5bf34bd0ebbfd174": {
      "address": "0xd08f3e1fC2132D9b5a0d1B5115800B0e91fDD394",
      "txHash": "0x90cfd318112802fa3615e35b13d8bc94e5c14815530b1b4587615a8b2f797bb0",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)15037",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)8079_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)17794",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)17509",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)17807_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minMTokenAmountForFirstDeposit",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:78"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "420",
            "type": "t_mapping(t_uint256,t_struct(Request)17526_storage)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:83"
          },
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "421",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:88"
          },
          {
            "label": "maxSupplyCap",
            "offset": 0,
            "slot": "422",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:95"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "423",
            "type": "t_array(t_uint256)49_storage",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:103"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "472",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DnTestDepositVault",
            "src": "contracts/products/dnTEST/DnTestDepositVault.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)17509": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)17794": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)15037": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)17811": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)17807_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)17526_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)8079_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)17526_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIn",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)17811",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "depositedUsdAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "usdAmountWithoutFees",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)17807_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e5e810a06307b8bf24d3327c794cd74e36abd0f181f262d29d341de939852172": {
      "address": "0xd5A3959fDD79CC491e945E2511158A81B45e0a68",
      "txHash": "0xb0abcace57cb626aebd71c570337ee28015a8413ec47e978c169f94a883f2ee0",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)15037",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)8079_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)17794",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)17509",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)17807_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minFiatRedeemAmount",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:69"
          },
          {
            "label": "fiatAdditionalFee",
            "offset": 0,
            "slot": "420",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:74"
          },
          {
            "label": "fiatFlatFee",
            "offset": 0,
            "slot": "421",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:79"
          },
          {
            "label": "redeemRequests",
            "offset": 0,
            "slot": "422",
            "type": "t_mapping(t_uint256,t_struct(Request)18075_storage)",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:84"
          },
          {
            "label": "requestRedeemer",
            "offset": 0,
            "slot": "423",
            "type": "t_address",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:89"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "424",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:94"
          },
          {
            "label": "___gap",
            "offset": 0,
            "slot": "474",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:33"
          },
          {
            "label": "mTbillRedemptionVault",
            "offset": 0,
            "slot": "524",
            "type": "t_contract(IRedemptionVault)18312",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:40"
          },
          {
            "label": "liquidityProvider",
            "offset": 0,
            "slot": "525",
            "type": "t_address",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "526",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "576",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DnTestRedemptionVaultWithSwapper",
            "src": "contracts/products/dnTEST/DnTestRedemptionVaultWithSwapper.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)17509": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)17794": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(IRedemptionVault)18312": {
            "label": "contract IRedemptionVault",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)15037": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)17811": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)17807_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)18075_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)8079_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)18075_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenOut",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)17811",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "amountMToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mTokenRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)17807_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "402305bca4ffcb4a0b3ccff7ff4f39ae15cdc0022155e0044a3b33cc918f1d52": {
      "address": "0x4295e58a4a784f1cc05D505e868d531061085391",
      "txHash": "0xee76e087e376f2094f607105a840d63c41b7182e43c6c3c917dbd9cbae44a732",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:48"
          },
          {
            "label": "accessControl",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(MidasAccessControl)14123",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "mToken",
            "src": "contracts/mToken.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "mToken",
            "src": "contracts/mToken.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)50_storage",
            "contract": "obeatUSD",
            "src": "contracts/products/obeatUSD/obeatUSD.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MidasAccessControl)14123": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "aba9ef8d1588ba76bb446adc0c30c2c324b8b1a2bb86a60abb92a927a73b4e6a": {
      "address": "0x3C16823833Cdda2DDE93dAe77299223572B391cA",
      "txHash": "0xb0b6476a985c54eed5d45995b8e14cceb1956639cdaf005ad5e933f30a815d18",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)14123",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "description",
            "offset": 0,
            "slot": "51",
            "type": "t_string_storage",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:31"
          },
          {
            "label": "latestRound",
            "offset": 0,
            "slot": "52",
            "type": "t_uint80",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:36"
          },
          {
            "label": "maxAnswerDeviation",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:42"
          },
          {
            "label": "minAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:47"
          },
          {
            "label": "maxAnswer",
            "offset": 0,
            "slot": "55",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:52"
          },
          {
            "label": "_roundData",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint80,t_struct(RoundData)14448_storage)",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ObeatUsdCustomAggregatorFeed",
            "src": "contracts/products/obeatUSD/ObeatUsdCustomAggregatorFeed.sol:20"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MidasAccessControl)14123": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int192": {
            "label": "int192",
            "numberOfBytes": "24"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint80,t_struct(RoundData)14448_storage)": {
            "label": "mapping(uint80 => struct CustomAggregatorV3CompatibleFeed.RoundData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoundData)14448_storage": {
            "label": "struct CustomAggregatorV3CompatibleFeed.RoundData",
            "members": [
              {
                "label": "roundId",
                "type": "t_uint80",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "answer",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "updatedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "answeredInRound",
                "type": "t_uint80",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint80": {
            "label": "uint80",
            "numberOfBytes": "10"
          }
        }
      }
    },
    "54c2de9b5af1ec0bc1d6e908056b9be1674d456a3c9a2b35d771eae7c1d3fb4d": {
      "address": "0x44219E1286994b6E881BCA23541fdF49b34062A3",
      "txHash": "0x07ebfe55c820614b8e8bc8ea3da1a1618cb77e120192ee82e04089130a34530d",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)14123",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "aggregator",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:22"
          },
          {
            "label": "healthyDiff",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:27"
          },
          {
            "label": "minExpectedAnswer",
            "offset": 0,
            "slot": "53",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:32"
          },
          {
            "label": "maxExpectedAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ObeatUsdDataFeed",
            "src": "contracts/products/obeatUSD/ObeatUsdDataFeed.sol:16"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)14123": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e94b2e66d8281537b19d2df77f3fdea5ba25a1dc9348e6d1282b6616f8d0a24e": {
      "address": "0x302345E06fC76b04EDe5C2A5B5b626910d360e5F",
      "txHash": "0x47e9a008c58f108705f73f60fc9e5424b840ce04aaea657528476266620b05a1",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)14123",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)8079_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)15421",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)15136",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)15434_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minMTokenAmountForFirstDeposit",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:78"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "420",
            "type": "t_mapping(t_uint256,t_struct(Request)15153_storage)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:83"
          },
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "421",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:88"
          },
          {
            "label": "maxSupplyCap",
            "offset": 0,
            "slot": "422",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:95"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "423",
            "type": "t_array(t_uint256)49_storage",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:103"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "472",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ObeatUsdDepositVault",
            "src": "contracts/products/obeatUSD/ObeatUsdDepositVault.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)15136": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)15421": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)14123": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)15438": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)15434_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)15153_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)8079_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)15153_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIn",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)15438",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "depositedUsdAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "usdAmountWithoutFees",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)15434_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "575d252f59116bdd664d0168dc9da68ead7daf77bc70b883cd9f5f3528cf477b": {
      "address": "0xf318C177726d69Ceb8Dbe4B5F35bd26803e89B77",
      "txHash": "0xe382fff354bf82eda24aa61b4f3e51a9636b28e1ab7d87cdca7e94cc9fd16555",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)14123",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)8079_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)15421",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)15136",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)15434_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minFiatRedeemAmount",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:69"
          },
          {
            "label": "fiatAdditionalFee",
            "offset": 0,
            "slot": "420",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:74"
          },
          {
            "label": "fiatFlatFee",
            "offset": 0,
            "slot": "421",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:79"
          },
          {
            "label": "redeemRequests",
            "offset": 0,
            "slot": "422",
            "type": "t_mapping(t_uint256,t_struct(Request)15702_storage)",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:84"
          },
          {
            "label": "requestRedeemer",
            "offset": 0,
            "slot": "423",
            "type": "t_address",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:89"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "424",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:94"
          },
          {
            "label": "___gap",
            "offset": 0,
            "slot": "474",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:33"
          },
          {
            "label": "mTbillRedemptionVault",
            "offset": 0,
            "slot": "524",
            "type": "t_contract(IRedemptionVault)15939",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:40"
          },
          {
            "label": "liquidityProvider",
            "offset": 0,
            "slot": "525",
            "type": "t_address",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "526",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "576",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ObeatUsdRedemptionVaultWithSwapper",
            "src": "contracts/products/obeatUSD/ObeatUsdRedemptionVaultWithSwapper.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)15136": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)15421": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(IRedemptionVault)15939": {
            "label": "contract IRedemptionVault",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)14123": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)15438": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)15434_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)15702_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)8079_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)15702_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenOut",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)15438",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "amountMToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mTokenRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)15434_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
