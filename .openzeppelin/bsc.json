{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x6Db3BCcfA67A39c6b6AE1e3352Ee175ec4146842",
    "txHash": "0x5f3407b367f9101a83e6c1b17108bc7c1821f3d1a0731f86c5edc6c08c5f09f9"
  },
  "proxies": [
    {
      "address": "0x7dD3e89fa418577f4BE6C4C47B242c6a9181a2DD",
      "txHash": "0xaab6b0aa37690a44c88589f2f279e9b13fc73a9225bbc2866ae9c276349df16f",
      "kind": "transparent"
    },
    {
      "address": "0xc8739fbBd54C587a2ad43b50CbcC30ae34FE9e34",
      "txHash": "0x399e34f2739d42eb5eefc9af1964ac8b3e6b30b9f4cfaf7f286b2370d4647be1",
      "kind": "transparent"
    },
    {
      "address": "0x3BdE0b7B59769Ec00c44C77090D88feB4516E731",
      "txHash": "0xf66b1fc9f120110948e9b5e472217ee60fc0cbf4854d9aac3ff93278bf822678",
      "kind": "transparent"
    },
    {
      "address": "0x583970971EFcEBfcebD3b530E436B8fEEb3D43C7",
      "txHash": "0x050bf333d98499abed50326cad2adf0389afaa8c46fac6ff0834f3989287d800",
      "kind": "transparent"
    },
    {
      "address": "0x30B59844eC16ABA3ec4ca0BD97557CcB670D924E",
      "txHash": "0xc86385c533167a7e713c559eaf2c0885fdbad7eda8d708df62fd0989b9d35376",
      "kind": "transparent"
    },
    {
      "address": "0x73685BD72dF34B92Bc81D43ef35CFf4300DE8625",
      "txHash": "0x3d2559f81613f9c8236816305729fa66059e765f38d2e8be424f3a8746317acc",
      "kind": "transparent"
    },
    {
      "address": "0x6BfE3850F8B01624Dd4Abc7A7104B7ccC9705cf8",
      "txHash": "0x317ff0cd8375e914200aa060b6a2a75d3850d84537743ad714dae2a5221d7747",
      "kind": "transparent"
    },
    {
      "address": "0xF5C090327C0395c47d6C11a6f02d61e9BA93993c",
      "txHash": "0x8a8dc94a92e45023f6dcc4eace8b5b2e97f4ae366e11fdb0626dc5ecc1f4c436",
      "kind": "transparent"
    },
    {
      "address": "0xf11e20adB39730eb5790417B060Ac0399B8DCDeD",
      "txHash": "0x266418c31762fbdd3fee450722b9fc72f57c77b8b45d87a4319b910efaabd4eb",
      "kind": "transparent"
    },
    {
      "address": "0x762FD99ee22742DEEcb8eeCB12165752D9A18164",
      "txHash": "0x75398459cefdc0eedb2e8b5bc96e6360c641f27f51dcf866d45c659f1c82bcb3",
      "kind": "transparent"
    },
    {
      "address": "0xF6F0f2f3d13894270d04205d00967175884B4ea8",
      "txHash": "0x9b0f327260a58fe7de536a79b7a8b1ac8e93bd71b264119e36651b2011f94101",
      "kind": "transparent"
    },
    {
      "address": "0x667F93B8c3704c98340277314B68c0AaF56e02FF",
      "txHash": "0xf16269737351947b04a80046ee8806e3e4eeeb415d405a95e230edbdfce95752",
      "kind": "transparent"
    },
    {
      "address": "0x7AeE9020Df0ac01Bc6f3cEeF6B1B7Cbf3D0937e4",
      "txHash": "0xe95c9713c59d08aa9526b943afebde120e3d1075a4b91bbcbfd4265d85ddfe35",
      "kind": "transparent"
    },
    {
      "address": "0xF76e650F8a9526fe5E4B40F1B567C5C1b427EE43",
      "txHash": "0x672d7d6028f4bd0d15b8b6bf4ec865a310630713047a2b8822b9883ac9aba994",
      "kind": "transparent"
    },
    {
      "address": "0xf3e018b0a53f935127298B18b3d1D174f81aE9Ca",
      "txHash": "0xf0a625ad45ff0558816472e9c4dd450ebdf88e460953664b6d937f364c7faff3",
      "kind": "transparent"
    }
  ],
  "impls": {
    "22673bdf6aa6cb59f5c819c3858ae9feee59191dfb2f93edcef3a7f2a5e4b633": {
      "address": "0xe039eFe684919Cd0c3D442B24bA1592Fa53D91f9",
      "txHash": "0xf43a72c45add93bdae629ecee74262e201fdadb4b46fbfc9c94e424276d8cd8d",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4ba98dad5dbcb51818ce86aabe258a10a63e112386095778a13ae93b173eb9f3": {
      "address": "0x1536eaDD072AE4416886718E0dC9b8eC095ED420",
      "txHash": "0x896038aa2d43569cbc28c0941b0e74b9f5006eab9011fdea51190c58d674c505",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:48"
          },
          {
            "label": "accessControl",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(MidasAccessControl)15037",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "mToken",
            "src": "contracts/mToken.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "mToken",
            "src": "contracts/mToken.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)50_storage",
            "contract": "mXRP",
            "src": "contracts/products/mXRP/mXRP.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MidasAccessControl)15037": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "135c9319534067a181e15c906be211c228ff163f657526a7f6ffe739a58e458a": {
      "address": "0x7c2fc6be8F34dd947220aD4CD8C7B892574134e0",
      "txHash": "0x2cde95d2facf3e44631c7d90d51622781ef416f6a69dc21c7c2136d7492bfc64",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)15037",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "description",
            "offset": 0,
            "slot": "51",
            "type": "t_string_storage",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:31"
          },
          {
            "label": "latestRound",
            "offset": 0,
            "slot": "52",
            "type": "t_uint80",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:36"
          },
          {
            "label": "maxAnswerDeviation",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:42"
          },
          {
            "label": "minAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:47"
          },
          {
            "label": "maxAnswer",
            "offset": 0,
            "slot": "55",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:52"
          },
          {
            "label": "_roundData",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint80,t_struct(RoundData)15732_storage)",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MXrpCustomAggregatorFeed",
            "src": "contracts/products/mXRP/MXrpCustomAggregatorFeed.sol:20"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MidasAccessControl)15037": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int192": {
            "label": "int192",
            "numberOfBytes": "24"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint80,t_struct(RoundData)15732_storage)": {
            "label": "mapping(uint80 => struct CustomAggregatorV3CompatibleFeed.RoundData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoundData)15732_storage": {
            "label": "struct CustomAggregatorV3CompatibleFeed.RoundData",
            "members": [
              {
                "label": "roundId",
                "type": "t_uint80",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "answer",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "updatedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "answeredInRound",
                "type": "t_uint80",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint80": {
            "label": "uint80",
            "numberOfBytes": "10"
          }
        }
      }
    },
    "210cb98617c95fe4462c7891e845fb761e68044bb155c3e241ab99088f3b966a": {
      "address": "0x0eC0Ae702bb47c6d25B55034aC8C6D2195158984",
      "txHash": "0x28f37513b5446546686f7bec7e84b12e72381bab54f1b6e3d9670645a6e43dcb",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)15037",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "aggregator",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:22"
          },
          {
            "label": "healthyDiff",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:27"
          },
          {
            "label": "minExpectedAnswer",
            "offset": 0,
            "slot": "53",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:32"
          },
          {
            "label": "maxExpectedAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MXrpDataFeed",
            "src": "contracts/products/mXRP/MXrpDataFeed.sol:16"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)15037": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e834bcc59514c12a22cd6cdaff749cb0e10e9f79e6e42bb6157ead94becfdff2": {
      "address": "0x1CaF775E65248BFc19Fba701c6F84560CD92E35A",
      "txHash": "0x983e246c68f7d7774a2ad4ec2af43232a88b28bd8e2f98236be194433d0a7e1d",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)15037",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)8079_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)17794",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)17509",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)17807_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minMTokenAmountForFirstDeposit",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:78"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "420",
            "type": "t_mapping(t_uint256,t_struct(Request)17526_storage)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:83"
          },
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "421",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:88"
          },
          {
            "label": "maxSupplyCap",
            "offset": 0,
            "slot": "422",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:95"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "423",
            "type": "t_array(t_uint256)49_storage",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:103"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "472",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MXrpDepositVault",
            "src": "contracts/products/mXRP/MXrpDepositVault.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)17509": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)17794": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)15037": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)17811": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)17807_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)17526_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)8079_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)17526_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIn",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)17811",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "depositedUsdAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "usdAmountWithoutFees",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)17807_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c3e1ba54f13bb7a29912294900a587d0bca5d602f545e0e140db826302e67854": {
      "address": "0x69a5D5eD2694F05bccD9AD81496C97B3156338CD",
      "txHash": "0xe2243597ae78397bca1c3be8510c4064932f7d11d2163a1d717444ea4e219405",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)15037",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)8079_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)17794",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)17509",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)17807_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minFiatRedeemAmount",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:69"
          },
          {
            "label": "fiatAdditionalFee",
            "offset": 0,
            "slot": "420",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:74"
          },
          {
            "label": "fiatFlatFee",
            "offset": 0,
            "slot": "421",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:79"
          },
          {
            "label": "redeemRequests",
            "offset": 0,
            "slot": "422",
            "type": "t_mapping(t_uint256,t_struct(Request)18075_storage)",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:84"
          },
          {
            "label": "requestRedeemer",
            "offset": 0,
            "slot": "423",
            "type": "t_address",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:89"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "424",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:94"
          },
          {
            "label": "___gap",
            "offset": 0,
            "slot": "474",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:33"
          },
          {
            "label": "mTbillRedemptionVault",
            "offset": 0,
            "slot": "524",
            "type": "t_contract(IRedemptionVault)18312",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:40"
          },
          {
            "label": "liquidityProvider",
            "offset": 0,
            "slot": "525",
            "type": "t_address",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "526",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "576",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MXrpRedemptionVaultWithSwapper",
            "src": "contracts/products/mXRP/MXrpRedemptionVaultWithSwapper.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)17509": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)17794": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(IRedemptionVault)18312": {
            "label": "contract IRedemptionVault",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)15037": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)17811": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)17807_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)18075_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)8079_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)18075_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenOut",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)17811",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "amountMToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mTokenRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)17807_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "523a9ef3ade85572d8881c6011ea65025a3e2f80de46ad669069d84228de3a53": {
      "address": "0x1ACa1d61A3F7e6CCa0E410a38A8ee7F42dFb36A1",
      "txHash": "0xb28f96d302ca6ea01b9d755880268be8acdd5d80fd3223bc633f548bf1f0765c",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)9092",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "description",
            "offset": 0,
            "slot": "51",
            "type": "t_string_storage",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:31"
          },
          {
            "label": "latestRound",
            "offset": 0,
            "slot": "52",
            "type": "t_uint80",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:36"
          },
          {
            "label": "maxAnswerDeviation",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:42"
          },
          {
            "label": "minAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:47"
          },
          {
            "label": "maxAnswer",
            "offset": 0,
            "slot": "55",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:52"
          },
          {
            "label": "_roundData",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint80,t_struct(RoundData)9417_storage)",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:57"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MidasAccessControl)9092": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int192": {
            "label": "int192",
            "numberOfBytes": "24"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint80,t_struct(RoundData)9417_storage)": {
            "label": "mapping(uint80 => struct CustomAggregatorV3CompatibleFeed.RoundData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoundData)9417_storage": {
            "label": "struct CustomAggregatorV3CompatibleFeed.RoundData",
            "members": [
              {
                "label": "roundId",
                "type": "t_uint80",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "answer",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "updatedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "answeredInRound",
                "type": "t_uint80",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint80": {
            "label": "uint80",
            "numberOfBytes": "10"
          }
        }
      }
    },
    "b191e8bb3024ad70d753b0b698fed22eb31a87d7f17acf6c96c14b266aa49a1b": {
      "address": "0xfcbf698bC1D7e058a5A98aE3f687Bcb50f1867D9",
      "txHash": "0x0f7b94d1c6bfa79375bf1dce9d617c636248b0e5aa106b23f3de6a1d8acd6daf",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)9092",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "aggregator",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:22"
          },
          {
            "label": "healthyDiff",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:27"
          },
          {
            "label": "minExpectedAnswer",
            "offset": 0,
            "slot": "53",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:32"
          },
          {
            "label": "maxExpectedAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:42"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)9092": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "aedcf6e14332018bd2b0f4ce655847c8faab3e987234a077023206b980098d04": {
      "address": "0xfeB873dfA1Ea1baf7b20840D28bB7B6f3822616e",
      "txHash": "0xf8ca856d5a3f6985b06c6ffe47ed485a50f860dbf20b2005a4c29f065ed570f0",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:48"
          },
          {
            "label": "accessControl",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(MidasAccessControl)9092",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "mToken",
            "src": "contracts/mToken.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "mToken",
            "src": "contracts/mToken.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)50_storage",
            "contract": "cUSDO",
            "src": "contracts/products/cUSDO/cUSDO.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MidasAccessControl)9092": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4a643525d771a6eb4b9f771cbe40371cd76c9bbedd279e86536b34cb8dabb79a": {
      "address": "0xE95E2CF19a50324CC1511B2123EbcC5A89991D21",
      "txHash": "0xaa7545c52ad40c6d25c99d846b58b984b43ceeb8f7e6baa252fe9e34052f233d",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)15037",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "description",
            "offset": 0,
            "slot": "51",
            "type": "t_string_storage",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:31"
          },
          {
            "label": "latestRound",
            "offset": 0,
            "slot": "52",
            "type": "t_uint80",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:36"
          },
          {
            "label": "maxAnswerDeviation",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:42"
          },
          {
            "label": "minAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:47"
          },
          {
            "label": "maxAnswer",
            "offset": 0,
            "slot": "55",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:52"
          },
          {
            "label": "_roundData",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint80,t_struct(RoundData)15732_storage)",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)50_storage",
            "contract": "CUsdoCustomAggregatorFeed",
            "src": "contracts/products/cUSDO/CUsdoCustomAggregatorFeed.sol:20"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MidasAccessControl)15037": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int192": {
            "label": "int192",
            "numberOfBytes": "24"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint80,t_struct(RoundData)15732_storage)": {
            "label": "mapping(uint80 => struct CustomAggregatorV3CompatibleFeed.RoundData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoundData)15732_storage": {
            "label": "struct CustomAggregatorV3CompatibleFeed.RoundData",
            "members": [
              {
                "label": "roundId",
                "type": "t_uint80",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "answer",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "updatedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "answeredInRound",
                "type": "t_uint80",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint80": {
            "label": "uint80",
            "numberOfBytes": "10"
          }
        }
      }
    },
    "1373beb6746996c47ec1afdfa27556b8ee07798c6c4dec3bbd7221039f1ab622": {
      "address": "0x15333d47106d55631ea07ff091eAe5B056e8943c",
      "txHash": "0x1613edbd3dedcc124be2e776afef1fd0a58a5a6ce4feb68335e04b4cfeb14b87",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)15037",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "aggregator",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:22"
          },
          {
            "label": "healthyDiff",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:27"
          },
          {
            "label": "minExpectedAnswer",
            "offset": 0,
            "slot": "53",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:32"
          },
          {
            "label": "maxExpectedAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)50_storage",
            "contract": "CUsdoDataFeed",
            "src": "contracts/products/cUSDO/CUsdoDataFeed.sol:16"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)15037": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ba51aab0c9a3af6993576a5d6d3f470ad89735611c29c5ddca7d5153a01a1d90": {
      "address": "0xDC357015aF5074679063D065Bf1BD730dDcf87f7",
      "txHash": "0x519aaf8da520baa5c4cada1940e6f83fdeddb42d92bb33784200780cb86ebc00",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)15037",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)8079_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)17794",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)17509",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)17807_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minMTokenAmountForFirstDeposit",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:78"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "420",
            "type": "t_mapping(t_uint256,t_struct(Request)17526_storage)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:83"
          },
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "421",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:88"
          },
          {
            "label": "maxSupplyCap",
            "offset": 0,
            "slot": "422",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:95"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "423",
            "type": "t_array(t_uint256)49_storage",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:103"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "472",
            "type": "t_array(t_uint256)50_storage",
            "contract": "CUsdoDepositVault",
            "src": "contracts/products/cUSDO/CUsdoDepositVault.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)17509": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)17794": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)15037": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)17811": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)17807_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)17526_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)8079_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)17526_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIn",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)17811",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "depositedUsdAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "usdAmountWithoutFees",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)17807_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d93a32616c32f08dae2e017dbe4eae4b93e98c6739e99e1ecd56b0e73c42415b": {
      "address": "0xe46602b3EACa0Efc59B942e22e7E055cb6e2158c",
      "txHash": "0xffa21a6bf3abb3c3488f4920aaa6f2520ccdaacd5b4def953bda62a9fd282e0b",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)15037",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)8079_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)17794",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)17509",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)17807_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minFiatRedeemAmount",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:69"
          },
          {
            "label": "fiatAdditionalFee",
            "offset": 0,
            "slot": "420",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:74"
          },
          {
            "label": "fiatFlatFee",
            "offset": 0,
            "slot": "421",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:79"
          },
          {
            "label": "redeemRequests",
            "offset": 0,
            "slot": "422",
            "type": "t_mapping(t_uint256,t_struct(Request)18075_storage)",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:84"
          },
          {
            "label": "requestRedeemer",
            "offset": 0,
            "slot": "423",
            "type": "t_address",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:89"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "424",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:94"
          },
          {
            "label": "___gap",
            "offset": 0,
            "slot": "474",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:33"
          },
          {
            "label": "mTbillRedemptionVault",
            "offset": 0,
            "slot": "524",
            "type": "t_contract(IRedemptionVault)18312",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:40"
          },
          {
            "label": "liquidityProvider",
            "offset": 0,
            "slot": "525",
            "type": "t_address",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "526",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "576",
            "type": "t_array(t_uint256)50_storage",
            "contract": "CUsdoRedemptionVaultWithSwapper",
            "src": "contracts/products/cUSDO/CUsdoRedemptionVaultWithSwapper.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)17509": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)17794": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(IRedemptionVault)18312": {
            "label": "contract IRedemptionVault",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)15037": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)17811": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)17807_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)18075_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)8079_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)18075_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenOut",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)17811",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "amountMToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mTokenRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)17807_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
