{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x21D2e0785f1268b904e5490a9F6d911FF10824Ac",
    "txHash": "0xac3d98168be7592332c0375426d0face5454d1ea348c2c3ca4be14e5df49832a"
  },
  "proxies": [
    {
      "address": "0x831150f2A1283880C3B271f1fBaBFa6aBf3F4cAE",
      "txHash": "0xf5e88210ad83ab58d86f579fada391d98335f8b328931991095758afc61fc016",
      "kind": "transparent"
    },
    {
      "address": "0xd2BD1Ee9535396e010007c1e61c918a11cD74D62",
      "txHash": "0xfbdaf1af07492f754bb3ae28d9352c21e1a0b12d1cd9f6430a3410ec6707c9ae",
      "kind": "transparent"
    },
    {
      "address": "0x16A05aE0cC2F0329Ad96445D670D4225FE41FFd5",
      "txHash": "0xa2caad02b5f3d996e534ac2084fc0b980c91050dfbeecf700ad07d71f4752ea1",
      "kind": "transparent"
    },
    {
      "address": "0x06e0B0F1A644Bb9881f675Ef266CeC15a63a3d47",
      "txHash": "0x0703e4f22e54a190ca64985a6c97d2da3e6fd41fa8418a6491a953aa646f5729",
      "kind": "transparent"
    },
    {
      "address": "0xFF64785Ee22D764F8E79812102d3Fa7f2d3437Af",
      "txHash": "0x596d37f984fc98549a6a9a5f209794652aa8f94ba908a724939cb4ba0cc92232",
      "kind": "transparent"
    },
    {
      "address": "0xed4ff96DAF37a0A44356E81A3cc22908B3f06B40",
      "txHash": "0x2110e1127fcbdb7474fc3b399d0c365395316d62e1ebc06916c54f44b8b83ede",
      "kind": "transparent"
    },
    {
      "address": "0x30FBc82A72CA674AA250cd6c27BCca1Fe602f1Bb",
      "txHash": "0xc2c76d85c18e680d8438b6c4e57993a48171d9a2880d67ec3f5d5b7caaa295ef",
      "kind": "transparent"
    },
    {
      "address": "0xDaC1b058cE42b67Ba33DbfDBA972d76C83C085D6",
      "txHash": "0x0ce540c7d3cd2939154f77452378bfe87c1af7b266f3b4dfcc70ec6d129bf88a",
      "kind": "transparent"
    }
  ],
  "impls": {
    "523a9ef3ade85572d8881c6011ea65025a3e2f80de46ad669069d84228de3a53": {
      "address": "0x9028c8b8Ddb4903d42E452cc4DEc8bdFf899ad69",
      "txHash": "0x25134993506a271feba1b76df36f171baf43fed99a2a01ccb1af4c24b7a2e625",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8982",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "description",
            "offset": 0,
            "slot": "51",
            "type": "t_string_storage",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:31"
          },
          {
            "label": "latestRound",
            "offset": 0,
            "slot": "52",
            "type": "t_uint80",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:36"
          },
          {
            "label": "maxAnswerDeviation",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:42"
          },
          {
            "label": "minAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:47"
          },
          {
            "label": "maxAnswer",
            "offset": 0,
            "slot": "55",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:52"
          },
          {
            "label": "_roundData",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint80,t_struct(RoundData)9307_storage)",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:57"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MidasAccessControl)8982": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int192": {
            "label": "int192",
            "numberOfBytes": "24"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint80,t_struct(RoundData)9307_storage)": {
            "label": "mapping(uint80 => struct CustomAggregatorV3CompatibleFeed.RoundData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoundData)9307_storage": {
            "label": "struct CustomAggregatorV3CompatibleFeed.RoundData",
            "members": [
              {
                "label": "roundId",
                "type": "t_uint80",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "answer",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "updatedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "answeredInRound",
                "type": "t_uint80",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint80": {
            "label": "uint80",
            "numberOfBytes": "10"
          }
        }
      }
    },
    "22673bdf6aa6cb59f5c819c3858ae9feee59191dfb2f93edcef3a7f2a5e4b633": {
      "address": "0x0F00413c8D24E54d41abc26Cf1d46b22ee4f6175",
      "txHash": "0x600c863e4135ae057a793ee9a2aee07dd71920194a27b01d2e28c318cbf3bad7",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b191e8bb3024ad70d753b0b698fed22eb31a87d7f17acf6c96c14b266aa49a1b": {
      "address": "0x3476a318924D63acc5BC184EE1D8aD1f3bEf968f",
      "txHash": "0x6a1ee338872ad0bed9da6058803bab0841fa12b5ee2a2f837f0f78050420b83d",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8982",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "aggregator",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:22"
          },
          {
            "label": "healthyDiff",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:27"
          },
          {
            "label": "minExpectedAnswer",
            "offset": 0,
            "slot": "53",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:32"
          },
          {
            "label": "maxExpectedAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:42"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)8982": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4ba98dad5dbcb51818ce86aabe258a10a63e112386095778a13ae93b173eb9f3": {
      "address": "0xA83279Cc350FC59e0A2A25EB6Cfd32Ff7Dd4Cb68",
      "txHash": "0x1bc8956859186d0f47b82f61fa634d4843b7490a744b82648fff1c54cff01ee1",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:48"
          },
          {
            "label": "accessControl",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(MidasAccessControl)8982",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "mToken",
            "src": "contracts/mToken.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "mToken",
            "src": "contracts/mToken.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)50_storage",
            "contract": "mXRP",
            "src": "contracts/mXRP/mXRP.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MidasAccessControl)8982": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "135c9319534067a181e15c906be211c228ff163f657526a7f6ffe739a58e458a": {
      "address": "0xD753cE473D8D575C9fA7D4161C39984Bf96C85eC",
      "txHash": "0x90f79e2bfedd89e57692f402b6f6022029a960045e65f5b6b36404de94093e4d",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8982",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "description",
            "offset": 0,
            "slot": "51",
            "type": "t_string_storage",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:31"
          },
          {
            "label": "latestRound",
            "offset": 0,
            "slot": "52",
            "type": "t_uint80",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:36"
          },
          {
            "label": "maxAnswerDeviation",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:42"
          },
          {
            "label": "minAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:47"
          },
          {
            "label": "maxAnswer",
            "offset": 0,
            "slot": "55",
            "type": "t_int192",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:52"
          },
          {
            "label": "_roundData",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint80,t_struct(RoundData)9307_storage)",
            "contract": "CustomAggregatorV3CompatibleFeed",
            "src": "contracts/feeds/CustomAggregatorV3CompatibleFeed.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MXrpCustomAggregatorFeed",
            "src": "contracts/mXRP/MXrpCustomAggregatorFeed.sol:20"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MidasAccessControl)8982": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int192": {
            "label": "int192",
            "numberOfBytes": "24"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint80,t_struct(RoundData)9307_storage)": {
            "label": "mapping(uint80 => struct CustomAggregatorV3CompatibleFeed.RoundData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoundData)9307_storage": {
            "label": "struct CustomAggregatorV3CompatibleFeed.RoundData",
            "members": [
              {
                "label": "roundId",
                "type": "t_uint80",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "answer",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "updatedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "answeredInRound",
                "type": "t_uint80",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint80": {
            "label": "uint80",
            "numberOfBytes": "10"
          }
        }
      }
    },
    "210cb98617c95fe4462c7891e845fb761e68044bb155c3e241ab99088f3b966a": {
      "address": "0xf989813806792359EEB882bD4be6dd2156364B01",
      "txHash": "0x8f8acd0ab3e7abbe6ef3fa8093f2627c0dd64f7b4765be1b9fbf5738f69cf1b5",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8982",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "aggregator",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:22"
          },
          {
            "label": "healthyDiff",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:27"
          },
          {
            "label": "minExpectedAnswer",
            "offset": 0,
            "slot": "53",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:32"
          },
          {
            "label": "maxExpectedAnswer",
            "offset": 0,
            "slot": "54",
            "type": "t_int256",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DataFeed",
            "src": "contracts/feeds/DataFeed.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MXrpDataFeed",
            "src": "contracts/mXRP/MXrpDataFeed.sol:16"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)8982": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "df5ad8142aa0aec291cdb1241e0221daa9886cef315340771f5c1913c124ff2a": {
      "address": "0xd00b525eDc40078aF4AD43692C4a6928A34012d5",
      "txHash": "0x932d07105c5358ef6a2a329014ed2b53d91592cb033fb5a3f642d41c6eab330f",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8982",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)4184_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)10273",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)9995",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)10286_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minMTokenAmountForFirstDeposit",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:78"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "420",
            "type": "t_mapping(t_uint256,t_struct(Request)10012_storage)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:83"
          },
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "421",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:88"
          },
          {
            "label": "maxSupplyCap",
            "offset": 0,
            "slot": "422",
            "type": "t_uint256",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:95"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "423",
            "type": "t_array(t_uint256)49_storage",
            "contract": "DepositVault",
            "src": "contracts/DepositVault.sol:103"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "472",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MXrpDepositVault",
            "src": "contracts/mXRP/MXrpDepositVault.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)9995": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)10273": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)8982": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)10290": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)10286_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)10012_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)4184_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)10012_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIn",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)10290",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "depositedUsdAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "usdAmountWithoutFees",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)10286_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2ce7238fc9fcabf145fde1240469c0bc066dea490e2f8e2e53c16fc4daa0fd45": {
      "address": "0xC8Aedf498F31A8A25Cc450aB1Db18Dec1EA53737",
      "txHash": "0x7558088ce39c72cb3d946f41c997596c074e328cfacc45311009d8dae0fc2786",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "accessControl",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(MidasAccessControl)8982",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithMidasAccessControl",
            "src": "contracts/access/WithMidasAccessControl.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "fnPaused",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Pausable",
            "src": "contracts/access/Pausable.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Blacklistable",
            "src": "contracts/access/Blacklistable.sol:16"
          },
          {
            "label": "greenlistEnabled",
            "offset": 0,
            "slot": "252",
            "type": "t_bool",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Greenlistable",
            "src": "contracts/access/Greenlistable.sol:21"
          },
          {
            "label": "sanctionsList",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "WithSanctionsList",
            "src": "contracts/abstract/WithSanctionsList.sol:23"
          },
          {
            "label": "currentRequestId",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(Counter)4184_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:53"
          },
          {
            "label": "mToken",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IMToken)10273",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:66"
          },
          {
            "label": "mTokenDataFeed",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IDataFeed)9995",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:71"
          },
          {
            "label": "tokensReceiver",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:76"
          },
          {
            "label": "instantFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:81"
          },
          {
            "label": "instantDailyLimit",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:88"
          },
          {
            "label": "dailyLimits",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:93"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:98"
          },
          {
            "label": "variationTolerance",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:103"
          },
          {
            "label": "waivedFeeRestriction",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:108"
          },
          {
            "label": "_paymentTokens",
            "offset": 0,
            "slot": "364",
            "type": "t_struct(AddressSet)3891_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:113"
          },
          {
            "label": "tokensConfig",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(TokenConfig)10286_storage)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:118"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "367",
            "type": "t_uint256",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:123"
          },
          {
            "label": "isFreeFromMinAmount",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:128"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "369",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ManageableVault",
            "src": "contracts/abstract/ManageableVault.sol:133"
          },
          {
            "label": "minFiatRedeemAmount",
            "offset": 0,
            "slot": "419",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:69"
          },
          {
            "label": "fiatAdditionalFee",
            "offset": 0,
            "slot": "420",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:74"
          },
          {
            "label": "fiatFlatFee",
            "offset": 0,
            "slot": "421",
            "type": "t_uint256",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:79"
          },
          {
            "label": "redeemRequests",
            "offset": 0,
            "slot": "422",
            "type": "t_mapping(t_uint256,t_struct(Request)10554_storage)",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:84"
          },
          {
            "label": "requestRedeemer",
            "offset": 0,
            "slot": "423",
            "type": "t_address",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:89"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "424",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVault",
            "src": "contracts/RedemptionVault.sol:94"
          },
          {
            "label": "___gap",
            "offset": 0,
            "slot": "474",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:33"
          },
          {
            "label": "mTbillRedemptionVault",
            "offset": 0,
            "slot": "524",
            "type": "t_contract(IRedemptionVault)10784",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:40"
          },
          {
            "label": "liquidityProvider",
            "offset": 0,
            "slot": "525",
            "type": "t_address",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "526",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RedemptionVaultWithSwapper",
            "src": "contracts/RedemptionVaultWithSwapper.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "576",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MXrpRedemptionVaultWithSwapper",
            "src": "contracts/mXRP/MXrpRedemptionVaultWithSwapper.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDataFeed)9995": {
            "label": "contract IDataFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IMToken)10273": {
            "label": "contract IMToken",
            "numberOfBytes": "20"
          },
          "t_contract(IRedemptionVault)10784": {
            "label": "contract IRedemptionVault",
            "numberOfBytes": "20"
          },
          "t_contract(MidasAccessControl)8982": {
            "label": "contract MidasAccessControl",
            "numberOfBytes": "20"
          },
          "t_enum(RequestStatus)10290": {
            "label": "enum RequestStatus",
            "members": ["Pending", "Processed", "Canceled"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenConfig)10286_storage)": {
            "label": "mapping(address => struct TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Request)10554_storage)": {
            "label": "mapping(uint256 => struct Request)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3891_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3576_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)4184_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Request)10554_storage": {
            "label": "struct Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenOut",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(RequestStatus)10290",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "amountMToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mTokenRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenOutRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)3576_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenConfig)10286_storage": {
            "label": "struct TokenConfig",
            "members": [
              {
                "label": "dataFeed",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
